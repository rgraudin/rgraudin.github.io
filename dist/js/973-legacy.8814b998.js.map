{"version":3,"file":"js/973-legacy.8814b998.js","mappings":"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","sources":["webpack://geoguess/./node_modules/@turf/bbox/dist/js/index.js","webpack://geoguess/./node_modules/@turf/boolean-point-in-polygon/dist/js/index.js","webpack://geoguess/./node_modules/@turf/helpers/dist/js/index.js","webpack://geoguess/./node_modules/@turf/invariant/dist/js/index.js","webpack://geoguess/./node_modules/@turf/meta/dist/js/index.js","webpack://geoguess/./node_modules/@turf/random/dist/js/index.js","webpack://geoguess/./node_modules/core-js/modules/es.object.entries.js","webpack://geoguess/./node_modules/core-js/modules/web.url.to-json.js","webpack://geoguess/./node_modules/random-position-in-polygon/index.js","webpack://geoguess/./src/pages/StreetView.vue?0687","webpack://geoguess/./src/components/HeaderGame.vue?0ef7","webpack://geoguess/./src/components/DialogMessage.vue?9071","webpack://geoguess/src/components/DialogMessage.vue","webpack://geoguess/./src/components/DialogMessage.vue?4c8a","webpack://geoguess/./src/components/DialogMessage.vue","webpack://geoguess/src/components/HeaderGame.vue","webpack://geoguess/./src/components/HeaderGame.vue?0cad","webpack://geoguess/./src/components/HeaderGame.vue","webpack://geoguess/./src/components/Maps.vue?3db8","webpack://geoguess/./src/components/DialogSummary.vue?fc7c","webpack://geoguess/src/components/DialogSummary.vue","webpack://geoguess/./src/components/DialogSummary.vue?e03d","webpack://geoguess/./src/components/DialogSummary.vue","webpack://geoguess/./src/components/game/DetailsMap.vue?5360","webpack://geoguess/src/components/game/DetailsMap.vue","webpack://geoguess/./src/components/game/DetailsMap.vue?e9dc","webpack://geoguess/./src/components/game/DetailsMap.vue","webpack://geoguess/./src/components/map/Map.vue?54cc","webpack://geoguess/./src/components/map/mixins/MapMixin.js","webpack://geoguess/src/components/map/Map.vue","webpack://geoguess/./src/components/map/Map.vue?8e14","webpack://geoguess/./src/components/map/Map.vue","webpack://geoguess/./src/components/map/MapAreas.vue?b9b8","webpack://geoguess/src/components/map/MapAreas.vue","webpack://geoguess/./src/components/map/MapAreas.vue?b99d","webpack://geoguess/./src/components/map/MapAreas.vue","webpack://geoguess/./src/utils/game/score.js","webpack://geoguess/./src/components/game/Leaderboard.vue?5c87","webpack://geoguess/src/components/game/Leaderboard.vue","webpack://geoguess/./src/components/game/Leaderboard.vue?c15a","webpack://geoguess/./src/components/game/Leaderboard.vue","webpack://geoguess/src/components/Maps.vue","webpack://geoguess/./src/components/Maps.vue?55e7","webpack://geoguess/./src/components/Maps.vue","webpack://geoguess/./src/plugins/StreetViewService.js","webpack://geoguess/./src/mixins/ConfirmExitMixin.js","webpack://geoguess/src/pages/StreetView.vue","webpack://geoguess/./src/pages/StreetView.vue?ecb3","webpack://geoguess/./src/pages/StreetView.vue"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    meta_1.coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexports.default = bbox;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant_1 = require(\"@turf/invariant\");\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point\n * resides inside the polygon. The polygon can be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if\n * the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nfunction booleanPointInPolygon(point, polygon, options) {\n    if (options === void 0) { options = {}; }\n    // validation\n    if (!point) {\n        throw new Error(\"point is required\");\n    }\n    if (!polygon) {\n        throw new Error(\"polygon is required\");\n    }\n    var pt = invariant_1.getCoord(point);\n    var geom = invariant_1.getGeom(polygon);\n    var type = geom.type;\n    var bbox = polygon.bbox;\n    var polys = geom.coordinates;\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) {\n        return false;\n    }\n    // normalize to multipolygon\n    if (type === \"Polygon\") {\n        polys = [polys];\n    }\n    var insidePoly = false;\n    for (var i = 0; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], options.ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !options.ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) {\n                insidePoly = true;\n            }\n        }\n    }\n    return insidePoly;\n}\nexports.default = booleanPointInPolygon;\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] &&\n        ring[0][1] === ring[ring.length - 1][1]) {\n        ring = ring.slice(0, ring.length - 1);\n    }\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0];\n        var yi = ring[i][1];\n        var xj = ring[j][0];\n        var yj = ring[j][1];\n        var onBoundary = pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0 &&\n            (xi - pt[0]) * (xj - pt[0]) <= 0 &&\n            (yi - pt[1]) * (yj - pt[1]) <= 0;\n        if (onBoundary) {\n            return !ignoreBoundary;\n        }\n        var intersect = yi > pt[1] !== yj > pt[1] &&\n            pt[0] < ((xj - xi) * (pt[1] - yi)) / (yj - yi) + xi;\n        if (intersect) {\n            isInside = !isInside;\n        }\n    }\n    return isInside;\n}\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return (bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1]);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.37,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return !!input && input.constructor === Object;\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nexports.getCoord = getCoord;\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\nexports.getCoords = getCoords;\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        helpers_1.isNumber(coordinates[0]) &&\n        helpers_1.isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\nexports.containsNumber = containsNumber;\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\nexports.geojsonType = geojsonType;\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\nexports.featureOf = featureOf;\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\nexports.collectionOf = collectionOf;\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\nexports.getGeom = getGeom;\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\nexports.getType = getType;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar helpers = require('@turf/helpers');\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            helpers.feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(helpers.feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = helpers.lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              helpers.lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return helpers.lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return helpers.point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return helpers.point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return helpers.point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return helpers.point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return helpers.point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return helpers.point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexports.coordAll = coordAll;\nexports.coordEach = coordEach;\nexports.coordReduce = coordReduce;\nexports.featureEach = featureEach;\nexports.featureReduce = featureReduce;\nexports.findPoint = findPoint;\nexports.findSegment = findSegment;\nexports.flattenEach = flattenEach;\nexports.flattenReduce = flattenReduce;\nexports.geomEach = geomEach;\nexports.geomReduce = geomReduce;\nexports.lineEach = lineEach;\nexports.lineReduce = lineReduce;\nexports.propEach = propEach;\nexports.propReduce = propReduce;\nexports.segmentEach = segmentEach;\nexports.segmentReduce = segmentReduce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Returns a random position within a {@link bounding box}.\n *\n * @name randomPosition\n * @param {Array<number>} [bbox=[-180, -90, 180, 90]] a bounding box inside of which positions are placed.\n * @returns {Array<number>} Position [longitude, latitude]\n * @example\n * var position = turf.randomPosition([-180, -90, 180, 90])\n * // => position\n */\nfunction randomPosition(bbox) {\n    if (Array.isArray(bbox)) {\n        return coordInBBox(bbox);\n    }\n    if (bbox && bbox.bbox) {\n        return coordInBBox(bbox.bbox);\n    }\n    return [lon(), lat()];\n}\nexports.randomPosition = randomPosition;\n/**\n * Returns a random {@link point}.\n *\n * @name randomPoint\n * @param {number} [count=1] how many geometries will be generated\n * @param {Object} [options={}] Optional parameters\n * @param {Array<number>} [options.bbox=[-180, -90, 180, 90]] a bounding box inside of which geometries are placed.\n * @returns {FeatureCollection<Point>} GeoJSON FeatureCollection of points\n * @example\n * var points = turf.randomPoint(25, {bbox: [-180, -90, 180, 90]})\n * // => points\n */\nfunction randomPoint(count, options) {\n    if (options === void 0) { options = {}; }\n    if (count === undefined || count === null) {\n        count = 1;\n    }\n    var features = [];\n    for (var i = 0; i < count; i++) {\n        features.push(helpers_1.point(randomPosition(options.bbox)));\n    }\n    return helpers_1.featureCollection(features);\n}\nexports.randomPoint = randomPoint;\n/**\n * Returns a random {@link polygon}.\n *\n * @name randomPolygon\n * @param {number} [count=1] how many geometries will be generated\n * @param {Object} [options={}] Optional parameters\n * @param {Array<number>} [options.bbox=[-180, -90, 180, 90]] a bounding box inside of which geometries are placed.\n * @param {number} [options.num_vertices=10] is how many coordinates each LineString will contain.\n * @param {number} [options.max_radial_length=10] is the maximum number of decimal degrees latitude or longitude that a\n * vertex can reach out of the center of the Polygon.\n * @returns {FeatureCollection<Polygon>} GeoJSON FeatureCollection of polygons\n * @example\n * var polygons = turf.randomPolygon(25, {bbox: [-180, -90, 180, 90]})\n * // => polygons\n */\nfunction randomPolygon(count, options) {\n    if (options === void 0) { options = {}; }\n    // Default param\n    if (count === undefined || count === null) {\n        count = 1;\n    }\n    if (!helpers_1.isNumber(options.num_vertices) || options.num_vertices === undefined) {\n        options.num_vertices = 10;\n    }\n    if (!helpers_1.isNumber(options.max_radial_length) ||\n        options.max_radial_length === undefined) {\n        options.max_radial_length = 10;\n    }\n    var features = [];\n    var _loop_1 = function (i) {\n        var vertices = [];\n        var circleOffsets = Array.apply(null, new Array(options.num_vertices + 1)).map(Math.random);\n        // Sum Offsets\n        circleOffsets.forEach(function (cur, index, arr) {\n            arr[index] = index > 0 ? cur + arr[index - 1] : cur;\n        });\n        // scaleOffsets\n        circleOffsets.forEach(function (cur) {\n            cur = (cur * 2 * Math.PI) / circleOffsets[circleOffsets.length - 1];\n            var radialScaler = Math.random();\n            vertices.push([\n                radialScaler * (options.max_radial_length || 10) * Math.sin(cur),\n                radialScaler * (options.max_radial_length || 10) * Math.cos(cur),\n            ]);\n        });\n        vertices[vertices.length - 1] = vertices[0]; // close the ring\n        // center the polygon around something\n        vertices = vertices.map(vertexToCoordinate(randomPosition(options.bbox)));\n        features.push(helpers_1.polygon([vertices]));\n    };\n    for (var i = 0; i < count; i++) {\n        _loop_1(i);\n    }\n    return helpers_1.featureCollection(features);\n}\nexports.randomPolygon = randomPolygon;\n/**\n * Returns a random {@link linestring}.\n *\n * @name randomLineString\n * @param {number} [count=1] how many geometries will be generated\n * @param {Object} [options={}] Optional parameters\n * @param {Array<number>} [options.bbox=[-180, -90, 180, 90]] a bounding box inside of which geometries are placed.\n * @param {number} [options.num_vertices=10] is how many coordinates each LineString will contain.\n * @param {number} [options.max_length=0.0001] is the maximum number of decimal degrees that a\n * vertex can be from its predecessor\n * @param {number} [options.max_rotation=Math.PI / 8] is the maximum number of radians that a\n * line segment can turn from the previous segment.\n * @returns {FeatureCollection<LineString>} GeoJSON FeatureCollection of linestrings\n * @example\n * var lineStrings = turf.randomLineString(25, {bbox: [-180, -90, 180, 90]})\n * // => lineStrings\n */\nfunction randomLineString(count, options) {\n    if (options === void 0) { options = {}; }\n    // Optional parameters\n    options = options || {};\n    if (!helpers_1.isObject(options)) {\n        throw new Error(\"options is invalid\");\n    }\n    var bbox = options.bbox;\n    var num_vertices = options.num_vertices;\n    var max_length = options.max_length;\n    var max_rotation = options.max_rotation;\n    if (count === undefined || count === null) {\n        count = 1;\n    }\n    // Default parameters\n    if (!helpers_1.isNumber(num_vertices) ||\n        num_vertices === undefined ||\n        num_vertices < 2) {\n        num_vertices = 10;\n    }\n    if (!helpers_1.isNumber(max_length) || max_length === undefined) {\n        max_length = 0.0001;\n    }\n    if (!helpers_1.isNumber(max_rotation) || max_rotation === undefined) {\n        max_rotation = Math.PI / 8;\n    }\n    var features = [];\n    for (var i = 0; i < count; i++) {\n        var startingPoint = randomPosition(bbox);\n        var vertices = [startingPoint];\n        for (var j = 0; j < num_vertices - 1; j++) {\n            var priorAngle = j === 0\n                ? Math.random() * 2 * Math.PI\n                : Math.tan((vertices[j][1] - vertices[j - 1][1]) /\n                    (vertices[j][0] - vertices[j - 1][0]));\n            var angle = priorAngle + (Math.random() - 0.5) * max_rotation * 2;\n            var distance = Math.random() * max_length;\n            vertices.push([\n                vertices[j][0] + distance * Math.cos(angle),\n                vertices[j][1] + distance * Math.sin(angle),\n            ]);\n        }\n        features.push(helpers_1.lineString(vertices));\n    }\n    return helpers_1.featureCollection(features);\n}\nexports.randomLineString = randomLineString;\nfunction vertexToCoordinate(hub) {\n    return function (cur) {\n        return [cur[0] + hub[0], cur[1] + hub[1]];\n    };\n}\nfunction rnd() {\n    return Math.random() - 0.5;\n}\nfunction lon() {\n    return rnd() * 360;\n}\nfunction lat() {\n    return rnd() * 180;\n}\nfunction coordInBBox(bbox) {\n    return [\n        Math.random() * (bbox[2] - bbox[0]) + bbox[0],\n        Math.random() * (bbox[3] - bbox[1]) + bbox[1],\n    ];\n}\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.es/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n$({ target: 'URL', proto: true, enumerable: true }, {\n  toJSON: function toJSON() {\n    return call(URL.prototype.toString, this);\n  }\n});\n","'use strict';\n\nconst bbox = require('@turf/bbox').default;\nconst random = require('@turf/random');\nconst booleanPointInPolygon = require('@turf/boolean-point-in-polygon').default;\n\n/**\n * Return random position inside geoJson Feature<(Polygon|MultiPolygon)>.\n * @param {Feature<(Polygon|MultiPolygon)>} polygon\n * @returns {Array<number>} Position [longitude, latitude]\n * @throws {Exception}\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n * var positionRandom = randomPositionInPolygon();\n *\n */\nfunction randomPositionInPolygon(polygon) {\n  if(!polygon || !polygon.type || polygon.type !== 'Feature' || ['Polygon','MultiPolygon'].indexOf(polygon.geometry.type) === -1) {\n    throw new Error('param polygon must be a Feature<(Polygon|MultiPolygon)>')\n  }\n  let  position;\n  const bboxObj = bbox(polygon);\n  do {\n    position = random.randomPosition(bboxObj)\n  }\n  while (!booleanPointInPolygon(position, polygon));\n\n  return position;\n}\n\nmodule.exports = randomPositionInPolygon;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"game-page\"}},[_c('div',{attrs:{\"id\":\"street-view-container\"}},[_c('HeaderGame',{ref:\"header\",attrs:{\"distance\":_vm.scoreHeader,\"points\":_vm.pointsHeader,\"round\":_vm.round,\"room-name\":_vm.roomName,\"nb-round\":_vm.nbRound,\"remaining-time\":_vm.remainingTime,\"mode\":_vm.mode,\"guess-string\":_vm.guessString,\"leaderboard-shown\":_vm.leaderboardShown}}),_c('div',{attrs:{\"id\":\"game-interface\"}},[_c('v-overlay',{attrs:{\"value\":!_vm.isReady && _vm.multiplayer,\"opacity\":\"1\"}}),_c('div',{ref:\"streetView\",attrs:{\"id\":\"street-view\"}}),_c('div',{attrs:{\"id\":\"game-interface__overlay\"}},[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nvar attrs = ref.attrs;\nreturn [_c('v-btn',_vm._g(_vm._b({staticClass:\"resetBtn\",attrs:{\"rounded\":\"\",\"dark\":\"\",\"fab\":\"\"},on:{\"click\":_vm.resetLocation}},'v-btn',attrs,false),on),[_c('v-icon',[_vm._v(\"mdi-crosshairs-gps\")])],1)]}}])},[_c('span',[_vm._v(_vm._s(_vm.$t('Maps.reset')))])]),_c('Maps',{ref:\"mapContainer\",attrs:{\"random-lat-lng\":_vm.randomLatLng,\"random-feature-properties\":_vm.randomFeatureProperties,\"room-name\":_vm.roomName,\"player-number\":_vm.playerNumber,\"player-name\":_vm.playerName,\"is-ready\":_vm.isReady,\"round\":_vm.round,\"score\":_vm.score,\"points\":_vm.points,\"difficulty\":_vm.difficultyData,\"time-limitation\":_vm.timeLimitation,\"bbox\":_vm.bbox,\"mode\":_vm.mode,\"area\":_vm.area,\"time-attack\":_vm.timeAttack,\"nb-round\":_vm.nbRound,\"countdown\":_vm.countdown,\"score-mode\":_vm.scoreMode,\"areasGeoJsonUrl\":_vm.areaParams && _vm.areaParams.data.urlArea,\"pathKey\":_vm.areaParams ? _vm.areaParams.data.pathKey : 'iso_a2',\"mapDetails\":_vm.mapDetails,\"score-leaderboard\":_vm.scoreLeaderboard,\"guessed-leaderboard\":_vm.guessedLeaderboard,\"guess-string\":_vm.guessString,\"leaderboard-shown\":_vm.leaderboardShown},on:{\"resetLocation\":_vm.resetLocation,\"calculateDistance\":_vm.updateScore,\"showResult\":_vm.showResult,\"goToNextRound\":_vm.goToNextRound,\"finishGame\":_vm.finishGame,\"printMapFull\":function($event){_vm.printMapFull = $event}}})],1)],1)],1),_c('v-overlay',{attrs:{\"value\":_vm.overlay,\"opacity\":\"0.8\",\"z-index\":\"1\"}}),_c('DialogMessage',{attrs:{\"dialog-message\":_vm.dialogMessage,\"dialog-title\":_vm.dialogTitle,\"dialog-text\":_vm.dialogText}}),_c('div',{staticClass:\"alert-container\"},[(!_vm.printMapFull)?_c('Leaderboard',{attrs:{\"guess-string\":_vm.guessString,\"leaderboard-shown\":_vm.leaderboardShown}}):_vm._e(),(_vm.isVisibleDialog)?_c('v-alert',{staticClass:\"warning-alert\",attrs:{\"type\":\"warning\",\"dismissible\":\"\"}},[_c('b',[_vm._v(_vm._s(_vm.$t('StreetView.nearby.title')))]),_vm._v(\" : \"+_vm._s(_vm.$t('StreetView.nearby.message'))+\" \")]):_vm._e(),_c('v-alert',{attrs:{\"id\":\"warningCountdown\",\"type\":\"info\",\"dismissible\":\"\",\"transition\":\"slide-x-transition\",\"prominent\":\"\",\"icon\":\"mdi-clock-fast\"},model:{value:(_vm.isVisibleCountdownAlert),callback:function ($$v) {_vm.isVisibleCountdownAlert=$$v},expression:\"isVisibleCountdownAlert\"}},[_vm._v(\" \"+_vm._s(_vm.$tc('StreetView.countdownAlert', _vm.remainingTime))+\" \"),_c('v-progress-linear',{attrs:{\"active\":_vm.isVisibleCountdownAlert,\"color\":\"white\",\"absolute\":\"\",\"bottom\":\"\"},model:{value:(_vm.countdownPercentage),callback:function ($$v) {_vm.countdownPercentage=$$v},expression:\"countdownPercentage\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-app-bar',{staticClass:\"header-game\",attrs:{\"color\":\"grey darken-4\"}},[_c('DialogMessage',{attrs:{\"dialog-message\":_vm.scoreboard,\"dialog-title\":\"Leaderboard\",\"dialog-text\":_vm.guessString,\"dismissible\":true},on:{\"close\":function($event){_vm.scoreboard = false}}}),(_vm.$vuetify.breakpoint.mobile && _vm.guessString && _vm.leaderboardShown)?_c('v-btn',{attrs:{\"dark\":\"\",\"icon\":\"\"},on:{\"click\":function($event){_vm.scoreboard = true}}},[_c('v-icon',[_vm._v(\"mdi-scoreboard-outline\")])],1):_vm._e(),(_vm.remainingTime != null && _vm.remainingTime > 0)?_c('div',[_c('span',{attrs:{\"id\":\"countdown-text\"}},[_vm._v(_vm._s(_vm.countdownText))])]):_c('div',[_c('span',{attrs:{\"id\":\"countdown-text\"}},[_vm._v(_vm._s(_vm.timerText))])]),(_vm.roomName && !_vm.streamerMode)?_c('div',{staticClass:\"round-score-container room-name\"},[_c('span',{staticClass:\"sub-text\"},[_vm._v(_vm._s(_vm.$t('HeaderGame.room'))+\" : \")]),_c('span',{staticClass:\"main-text\"},[_vm._v(\" \"+_vm._s(_vm.roomName)+\" \")])]):_vm._e(),_c('div',{staticClass:\"flex-grow-1\"}),_c('div',{staticClass:\"round-score-container\"},[_c('span',{staticClass:\"sub-text\"},[_vm._v(_vm._s(_vm.$t('HeaderGame.round'))+\": \")]),_c('span',{staticClass:\"main-text\",attrs:{\"id\":\"roundLabel\"}},[_vm._v(\" \"+_vm._s(_vm.round)+\" / \"+_vm._s(_vm.nbRound)+\" \")])]),(_vm.isDistanceVisible)?_c('div',{staticClass:\"round-score-container\"},[_c('span',{staticClass:\"sub-text\"},[_vm._v(_vm._s(_vm.$t('HeaderGame.distance'))+\": \")]),_c('span',{staticClass:\"main-text\"},[_vm._v(_vm._s(_vm.$t('HeaderGame.kmaway', { value: new Intl.NumberFormat(_vm.$i18n.locale).format( _vm.distance / 1000 ), })))])]):_vm._e(),_c('div',{staticClass:\"round-points-container\"},[_c('span',{staticClass:\"sub-text\"},[_vm._v(_vm._s(_vm.$t('HeaderGame.score'))+\": \")]),_c('span',{staticClass:\"main-text\"},[_vm._v(_vm._s(_vm.points))])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-dialog',{attrs:{\"value\":_vm.dialogMessage,\"max-width\":\"600\",\"persistent\":\"\",\"fullscreen\":_vm.$viewport.width < 450}},[_c('v-card',{attrs:{\"color\":\"#061422\"}},[_c('v-card-title',[_c('span',{staticClass:\"dialog-message__title\",attrs:{\"id\":\"card-title\"}},[_vm._v(_vm._s(_vm.dialogTitle))]),_c('v-spacer'),(_vm.dismissible)?_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":function($event){return _vm.$emit('close')}}},[_c('v-icon',[_vm._v(\"mdi-close\")])],1):_vm._e()],1),_c('v-card-text',[_c('v-container',[_c('span',[_vm._v(_vm._s(_vm.dialogText))])])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-dialog\r\n        :value=\"dialogMessage\"\r\n        max-width=\"600\"\r\n        persistent\r\n        :fullscreen=\"$viewport.width < 450\"\r\n    >\r\n        <v-card color=\"#061422\">\r\n            <v-card-title>\r\n                <span\r\n                    id=\"card-title\"\r\n                    class=\"dialog-message__title\"\r\n                >{{\r\n                    dialogTitle\r\n                }}</span>\r\n                <v-spacer />\r\n                <v-btn v-if=\"dismissible\" icon @click=\"$emit('close')\">\r\n                    <v-icon>mdi-close</v-icon>\r\n                </v-btn>\r\n            </v-card-title>\r\n            <v-card-text>\r\n                <v-container>\r\n                    <span>{{ dialogText }}</span>\r\n                </v-container>\r\n            </v-card-text>\r\n        </v-card>\r\n    </v-dialog>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: ['dialogMessage', 'dialogTitle', 'dialogText', 'dismissible'],\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nspan {\r\n    color: #888;\r\n    white-space: pre-line;\r\n}\r\n\r\n#card-title {\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    opacity: 0.9;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DialogMessage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DialogMessage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DialogMessage.vue?vue&type=template&id=9af62fba&scoped=true&\"\nimport script from \"./DialogMessage.vue?vue&type=script&lang=js&\"\nexport * from \"./DialogMessage.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DialogMessage.vue?vue&type=style&index=0&id=9af62fba&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9af62fba\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCard,VCardText,VCardTitle,VContainer,VDialog,VIcon,VSpacer})\n","<template>\r\n    <div>\r\n        <v-app-bar class=\"header-game\" color=\"grey darken-4\">\r\n            <DialogMessage\r\n                :dialog-message=\"scoreboard\"\r\n                dialog-title=\"Leaderboard\"\r\n                :dialog-text=\"guessString\"\r\n                :dismissible=\"true\"\r\n                @close=\"scoreboard = false\"\r\n            />\r\n            <v-btn dark icon @click=\"scoreboard = true\" v-if=\"$vuetify.breakpoint.mobile && guessString && leaderboardShown\">\r\n                <v-icon>mdi-scoreboard-outline</v-icon>\r\n            </v-btn>\r\n            <div v-if=\"remainingTime != null && remainingTime > 0\">\r\n                <span id=\"countdown-text\">{{ countdownText }}</span>\r\n            </div>\r\n\r\n            <div v-else>\r\n                <span id=\"countdown-text\">{{ timerText }}</span>\r\n            </div>\r\n            <div\r\n                v-if=\"roomName && !streamerMode\"\r\n                class=\"round-score-container room-name\"\r\n            >\r\n                <span class=\"sub-text\">{{ $t('HeaderGame.room') }} : </span>\r\n                <span class=\"main-text\">\r\n                    {{ roomName }}\r\n                </span>\r\n            </div>\r\n            <div class=\"flex-grow-1\" />\r\n            <div class=\"round-score-container\">\r\n                <span class=\"sub-text\">{{ $t('HeaderGame.round') }}: </span>\r\n                <span id=\"roundLabel\" class=\"main-text\">\r\n                    {{ round }} / {{ nbRound }}\r\n                </span>\r\n            </div>\r\n\r\n            <div v-if=\"isDistanceVisible\" class=\"round-score-container\">\r\n                <span class=\"sub-text\">{{ $t('HeaderGame.distance') }}: </span>\r\n                <span class=\"main-text\">{{\r\n                    $t('HeaderGame.kmaway', {\r\n                        value: new Intl.NumberFormat($i18n.locale).format(\r\n                            distance / 1000\r\n                        ),\r\n                    })\r\n                }}</span>\r\n            </div>\r\n            <div class=\"round-points-container\">\r\n                <span class=\"sub-text\">{{ $t('HeaderGame.score') }}: </span>\r\n\r\n                <span class=\"main-text\">{{ points }}</span>\r\n            </div>\r\n        </v-app-bar>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCountdownText } from '@/utils';\r\nimport { GAME_MODE } from '../constants';\r\nimport { mapState } from 'vuex';\r\nimport DialogMessage from '@/components/DialogMessage.vue';\r\n\r\nexport default {\r\n    components: {\r\n        DialogMessage,\r\n    },\r\n    props: [\r\n        'distance',\r\n        'points',\r\n        'round',\r\n        'remainingTime',\r\n        'roomName',\r\n        'nbRound',\r\n        'guessString',\r\n        'leaderboardShown'\r\n    ],\r\n    data() {\r\n        return {\r\n            scoreboard: false,\r\n            startedAt: null,\r\n            timerText: '',\r\n            intervalFunction: null,\r\n        };\r\n    },\r\n    watch: {\r\n        round: function () {\r\n            this.startTimer();\r\n        },\r\n    },\r\n    computed: {\r\n        ...mapState({\r\n            streamerMode: (state) => state.homeStore.streamerMode,\r\n        }),\r\n        countdownText() {\r\n            return getCountdownText(this.remainingTime);\r\n        },\r\n        isDistanceVisible() {\r\n            return this.mode !== GAME_MODE.COUNTRY;\r\n        },\r\n    },\r\n    methods: {\r\n        startTimer() {\r\n            if (this.remainingTime != 0) {\r\n                return;\r\n            }\r\n            this.startedAt = new Date();\r\n\r\n            this.intervalFunction = setInterval(() => {\r\n                this.timerText = getCountdownText(\r\n                    Math.round((Date.now() - this.startedAt) / 1000)\r\n                );\r\n            }, 1000);\r\n        },\r\n        stopTimer() {\r\n            if (this.intervalFunction) {\r\n                clearInterval(this.intervalFunction);\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.header-game {\r\n    z-index: 3;\r\n    opacity: 0.8;\r\n}\r\n\r\n.toolbar-title {\r\n    color: white;\r\n}\r\n\r\n.round-score-container {\r\n    padding: 0 10px 0 40px;\r\n}\r\n\r\n.round-points-container {\r\n    padding: 0 10px 0 40px;\r\n}\r\n\r\n.main-text,\r\n#countdown-text {\r\n    color: white;\r\n}\r\n\r\n.sub-text {\r\n    color: #616161;\r\n}\r\n@media (max-width: 555px) {\r\n    .room-name {\r\n        display: none;\r\n    }\r\n    .main-text,\r\n    .sub-text,\r\n    #countdown-text {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .round-score-container {\r\n        padding: 0 5%;\r\n        .sub-text {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    .round-points-container {\r\n        padding: 0 5%;\r\n        .sub-text {\r\n            display: none;\r\n        }\r\n    }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HeaderGame.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HeaderGame.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HeaderGame.vue?vue&type=template&id=3118eac0&scoped=true&\"\nimport script from \"./HeaderGame.vue?vue&type=script&lang=js&\"\nexport * from \"./HeaderGame.vue?vue&type=script&lang=js&\"\nimport style0 from \"./HeaderGame.vue?vue&type=style&index=0&id=3118eac0&prod&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3118eac0\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAppBar } from 'vuetify/lib/components/VAppBar';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\ninstallComponents(component, {VAppBar,VBtn,VIcon})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._g({class:[\n        (_vm.$viewport.width >= 450 && (_vm.activeMap || _vm.pinActive)) ||\n            _vm.isMakeGuessButtonClicked ||\n            _vm.isNextButtonVisible\n            ? 'container-map--active'\n            : '',\n        _vm.printMapFull ? 'container-map--full' : '',\n        (\"container-map--size-\" + _vm.size) ],attrs:{\"id\":\"container-map\"}},\n        _vm.$viewport.width >= 450 // Only on tablet and desktop Issue #104\n            ? {\n                mouseover: function () {\n                    _vm.activeMap = true;\n                },\n                mouseleave: function () {\n                    _vm.activeMap = false;\n                },\n            }\n            : {}\n    ),[_c('div',{staticClass:\"container-map_details\"},[_c('div',{staticClass:\"alert-container\"},[_c('Leaderboard',{attrs:{\"leaderboard-shown\":_vm.leaderboardShown,\"guess-string\":_vm.guessString}})],1),(_vm.printMapFull)?_c('DetailsMap',{attrs:{\"properties\":_vm.randomFeatureProperties}}):_vm._e()],1),_c('div',{staticClass:\"container-map_controls\"},[_c('div',{staticClass:\"container-map_btns\"},[_c('v-btn',{attrs:{\"fab\":\"\",\"x-small\":\"\"},on:{\"click\":_vm.showNotepad}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\" mdi-file-document-edit \")])],1),_c('v-btn',{attrs:{\"id\":\"btnDown\",\"fab\":\"\",\"x-small\":\"\",\"disabled\":_vm.size < 2},on:{\"click\":function($event){_vm.size--}}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\" mdi-arrow-bottom-left \")])],1),_c('v-btn',{attrs:{\"id\":\"btnUp\",\"fab\":\"\",\"x-small\":\"\",\"disabled\":_vm.size > 3},on:{\"click\":function($event){_vm.size++}}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\" mdi-arrow-top-right \")])],1),_c('v-btn',{attrs:{\"id\":\"btnPin\",\"fab\":\"\",\"x-small\":\"\"},on:{\"click\":function($event){_vm.pinActive = !_vm.pinActive}}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\" mdi-pin\"+_vm._s(_vm.pinActive ? '-off' : '')+\" \")])],1)],1)]),(\n            _vm.$viewport.width < 450 &&\n                !_vm.isGuessButtonClicked &&\n                _vm.isMakeGuessButtonClicked\n        )?_c('v-btn',{attrs:{\"id\":\"hide-map-button\",\"fab\":\"\",\"x-small\":\"\",\"color\":\"red\"},on:{\"click\":_vm.hideMap}},[_c('v-icon',{attrs:{\"color\":\"white\"}},[_vm._v(\" mdi-close \")])],1):_vm._e(),(this.mode === 'classic')?_c('Map',{ref:\"map\",attrs:{\"id\":\"map\",\"bbox\":_vm.bbox},on:{\"setSeletedPos\":_vm.setSeletedPos}}):_vm._e(),(this.mode !== 'classic')?_c('MapAreas',{ref:\"map\",attrs:{\"id\":\"map\",\"area\":_vm.area,\"areasGeoJsonUrl\":_vm.areasGeoJsonUrl,\"pathKey\":_vm.pathKey,\"bbox\":_vm.bbox,\"showFlag\":this.mode === 'country'},on:{\"setSeletedPos\":_vm.setSeletedPos}}):_vm._e(),(!_vm.printMapFull)?_c('textarea',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isNotepadVisible),expression:\"isNotepadVisible\"}],ref:\"refNotepad\",staticClass:\"container-map_notepad\",attrs:{\"spellcheck\":\"false\"}}):_vm._e(),_vm._v(\" \"),(\n            !_vm.isNextButtonVisible &&\n                !_vm.isSummaryButtonVisible &&\n                (_vm.$viewport.width > 450 || _vm.isMakeGuessButtonClicked)\n        )?_c('button',{attrs:{\"id\":\"guess-button\",\"disabled\":_vm.randomLatLng == null ||\n                _vm.selectedPos == null ||\n                _vm.isGuessButtonClicked ||\n                (!!this.room && !_vm.isReady)},on:{\"click\":_vm.selectLocation}},[_vm._v(\" \"+_vm._s(_vm.$t('Maps.guess'))+\" \")]):_vm._e(),(_vm.isNextButtonVisible)?_c('button',{style:({\n            backgroundColor: _vm.isNextButtonEnabled ? '#F44336' : '#B71C1C',\n        }),attrs:{\"id\":\"next-button\",\"disabled\":!_vm.isNextButtonEnabled},on:{\"click\":function($event){return _vm.goToNextRound(false)}}},[_vm._v(\" \"+_vm._s(_vm.$t('Maps.nextRound'))+\" \")]):_vm._e(),(_vm.isSummaryButtonVisible)?_c('button',{attrs:{\"id\":\"summary-button\"},on:{\"click\":function($event){_vm.dialogSummary = true}}},[_vm._v(\" \"+_vm._s(_vm.$t('Maps.viewSummary'))+\" \")]):_vm._e(),(\n            _vm.$viewport.width < 450 &&\n                !_vm.isGuessButtonClicked &&\n                !_vm.isMakeGuessButtonClicked &&\n                !_vm.isNextButtonVisible\n        )?_c('button',{staticClass:\"primary\",attrs:{\"id\":\"make-guess-button\"},on:{\"click\":_vm.showMap}},[_vm._v(\" \"+_vm._s(_vm.$t('Maps.makeGuess'))+\" \")]):_vm._e(),_c('DialogSummary',{attrs:{\"dialog-summary\":_vm.dialogSummary,\"summary-texts\":_vm.summaryTexts,\"score\":_vm.score,\"player-name\":_vm.playerName,\"points\":_vm.points,\"game\":_vm.game,\"multiplayer\":!!_vm.room,\"mapDetails\":_vm.mapDetails,\"nb-round\":_vm.nbRound},on:{\"finishGame\":_vm.finishGame,\"playAgain\":function($event){return _vm.goToNextRound(true)}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-dialog',{attrs:{\"value\":_vm.dialogSummary,\"max-width\":\"720\",\"persistent\":\"\",\"fullscreen\":_vm.$viewport.width < 450}},[_c('v-card',{attrs:{\"color\":\"#061422\"}},[_c('v-card-text',{attrs:{\"id\":\"card-text\"}},[(!_vm.multiplayer)?_c('v-row',{attrs:{\"justify\":\"center\"}},[_c('p',{attrs:{\"id\":\"summary-text\"},domProps:{\"innerHTML\":_vm._s(\n                        _vm.$t('DialogSummary.summaryMsgSinglePoints', {\n                            points: _vm.points,\n                        }) +\n                            (_vm.showDistance\n                                ? _vm.$t('DialogSummary.summaryMsgSingleDistance', {\n                                    distance: _vm.score / 1000,\n                                })\n                                : '')\n                    )}})]):_vm._e(),_vm._l((_vm.summaryTexts),function(text,index){return _c('v-row',{key:index,staticClass:\"mt-3\",attrs:{\"justify\":\"center\"}},[_c('span',{attrs:{\"id\":\"summary-text\"}},[(index == 0 || index == 1 || index == 2)?_c('v-icon',{attrs:{\"color\":index == 0\n                                ? '#CCAC00'\n                                : index == 1\n                                    ? '#C0C0C0'\n                                    : '#CC8E34'}},[_vm._v(\"mdi-crown\")]):_vm._e(),_c('span',{domProps:{\"innerHTML\":_vm._s(\n                            _vm.$t('DialogSummary.summaryMsgMultiPoints', {\n                                playerName: text.playerName,\n                                points: text.finalPoints,\n                            }) +\n                                (_vm.showDistance\n                                    ? _vm.$t(\n                                        'DialogSummary.summaryMsgMultiDistance',\n                                        {\n                                            distance: text.finalScore / 1000,\n                                        }\n                                    )\n                                    : '')\n                        )}})],1)])}),_c('v-row',{staticClass:\"mt-8\",attrs:{\"justify\":\"center\"}},[_c('v-btn',{staticClass:\"mt-8\",attrs:{\"id\":\"play-again-button\",\"dark\":\"\",\"color\":\"#43B581\"},on:{\"click\":function($event){return _vm.$emit('finishGame')}}},[_vm._v(\" \"+_vm._s(_vm.$t('DialogSummary.viewDetails'))+\" \")]),(!_vm.multiplayer)?_c('v-btn',{staticClass:\"mt-8\",attrs:{\"id\":\"exit-button\",\"dark\":\"\",\"color\":\"#f44336\"},on:{\"click\":function($event){return _vm.$emit('playAgain')}}},[_vm._v(\" \"+_vm._s(_vm.$t('Maps.playAgain'))+\" \")]):_vm._e()],1)],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-dialog\r\n        :value=\"dialogSummary\"\r\n        max-width=\"720\"\r\n        persistent\r\n        :fullscreen=\"$viewport.width < 450\"\r\n    >\r\n        <v-card color=\"#061422\">\r\n            <v-card-text id=\"card-text\">\r\n                <v-row\r\n                    v-if=\"!multiplayer\"\r\n                    justify=\"center\"\r\n                >\r\n                    <p\r\n                        id=\"summary-text\"\r\n                        v-html=\"\r\n                            $t('DialogSummary.summaryMsgSinglePoints', {\r\n                                points,\r\n                            }) +\r\n                                (showDistance\r\n                                    ? $t('DialogSummary.summaryMsgSingleDistance', {\r\n                                        distance: score / 1000,\r\n                                    })\r\n                                    : '')\r\n                        \"\r\n                    />\r\n                </v-row>\r\n                <v-row\r\n                    v-for=\"(text, index) in summaryTexts\"\r\n                    :key=\"index\"\r\n                    class=\"mt-3\"\r\n                    justify=\"center\"\r\n                >\r\n                    <span id=\"summary-text\">\r\n                        <v-icon\r\n                            v-if=\"index == 0 || index == 1 || index == 2\"\r\n                            :color=\"\r\n                                index == 0\r\n                                    ? '#CCAC00'\r\n                                    : index == 1\r\n                                        ? '#C0C0C0'\r\n                                        : '#CC8E34'\r\n                            \"\r\n                        >mdi-crown</v-icon>\r\n                        <span\r\n                            v-html=\"\r\n                                $t('DialogSummary.summaryMsgMultiPoints', {\r\n                                    playerName: text.playerName,\r\n                                    points: text.finalPoints,\r\n                                }) +\r\n                                    (showDistance\r\n                                        ? $t(\r\n                                            'DialogSummary.summaryMsgMultiDistance',\r\n                                            {\r\n                                                distance: text.finalScore / 1000,\r\n                                            }\r\n                                        )\r\n                                        : '')\r\n                            \"\r\n                        />\r\n                    </span>\r\n                </v-row>\r\n                <v-row\r\n                    class=\"mt-8\"\r\n                    justify=\"center\"\r\n                >\r\n                    <v-btn\r\n                        id=\"play-again-button\"\r\n                        class=\"mt-8\"\r\n                        dark\r\n                        color=\"#43B581\"\r\n                        @click=\"$emit('finishGame')\"\r\n                    >\r\n                        {{ $t('DialogSummary.viewDetails') }}\r\n                    </v-btn>\r\n                    <v-btn\r\n                        v-if=\"!multiplayer\"\r\n                        id=\"exit-button\"\r\n                        class=\"mt-8\"\r\n                        dark\r\n                        color=\"#f44336\"\r\n                        @click=\"$emit('playAgain')\"\r\n                    >\r\n                        {{ $t('Maps.playAgain') }}\r\n                    </v-btn>\r\n                </v-row>\r\n            </v-card-text>\r\n        </v-card>\r\n    </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { GAME_MODE } from '../constants';\r\nexport default {\r\n    props: [\r\n        'dialogSummary',\r\n        'summaryTexts',\r\n        'playerName',\r\n        'score',\r\n        'points',\r\n        'multiplayer',\r\n        'game',\r\n        'mode',\r\n        'mapDetails',\r\n        'nbRound',\r\n    ],\r\n    computed: {\r\n        showDistance() {\r\n            return this.mode === GAME_MODE.CLASSIC;\r\n        },\r\n    },\r\n    watch: {\r\n        dialogSummary: function (newVal) {\r\n            if (newVal == true) {\r\n                this.updateRecord();\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        updateRecord() {\r\n            let history = localStorage.getItem('history');\r\n            if (history == null) {\r\n                history = [];\r\n            } else {\r\n                history = JSON.parse(history);\r\n            }\r\n            history.push({\r\n                ...this.game,\r\n                score: this.score,\r\n                points: this.points,\r\n                rank: this.multiplayer\r\n                    ? this.summaryTexts.findIndex(\r\n                          (text) => text.playerName === this.playerName\r\n                      ) + 1\r\n                    : undefined,\r\n                nbRound: this.nbRound,\r\n                mapDetails: this.mapDetails\r\n            });\r\n            localStorage.setItem('history', JSON.stringify(history));\r\n        },\r\n        finishGame() {\r\n            this.$emit('finishGame');\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#exit-button,\r\n#play-again-button {\r\n    height: 44px;\r\n    width: 210px;\r\n    border-radius: 40px;\r\n    margin: 0 2%;\r\n}\r\n\r\n#card-text {\r\n    text-align: center;\r\n    padding: 80px 10% 80px 10%;\r\n}\r\n\r\n#summary-text {\r\n    font-size: 18px;\r\n    opacity: 0.9;\r\n}\r\n\r\n@media (max-width: 450px) {\r\n    #exit-button,\r\n    #play-again-button {\r\n        height: 36px;\r\n    }\r\n\r\n    #exit-button {\r\n        margin-top: 28px;\r\n        margin-bottom: 24px;\r\n    }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DialogSummary.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DialogSummary.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DialogSummary.vue?vue&type=template&id=200a3bd4&scoped=true&\"\nimport script from \"./DialogSummary.vue?vue&type=script&lang=js&\"\nexport * from \"./DialogSummary.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DialogSummary.vue?vue&type=style&index=0&id=200a3bd4&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"200a3bd4\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCard,VCardText,VDialog,VIcon,VRow})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (\n        _vm.properties &&\n            typeof _vm.properties === 'object' &&\n            (_vm.properties.title || _vm.properties.description)\n    )?_c('div',{staticClass:\"details-map_container\"},[_c('h2',[_vm._v(\" \"+_vm._s(_vm.properties.title)+\" \")]),_c('p',[_vm._v(\" \"+_vm._s(_vm.properties.description)+\" \")]),(_vm.properties.link && _vm.validURL(_vm.properties.link))?_c('a',{staticClass:\"details-map_link\",attrs:{\"href\":_vm.properties.link,\"target\":\"_blank\"}},[_c('v-icon',{attrs:{\"color\":\"darkGreen\"}},[_vm._v(\"mdi-alert-circle\")]),_vm._v(\" \"+_vm._s(_vm.$t('DetailsMap.moreInfo')))],1):_vm._e()]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div\r\n        v-if=\"\r\n            properties &&\r\n                typeof properties === 'object' &&\r\n                (properties.title || properties.description)\r\n        \"\r\n        class=\"details-map_container\"\r\n    >\r\n        <h2>\r\n            {{ properties.title }}\r\n        </h2>\r\n        <p>\r\n            {{ properties.description }}\r\n        </p>\r\n        <a\r\n            v-if=\"properties.link && validURL(properties.link)\"\r\n            :href=\"properties.link\"\r\n            target=\"_blank\"\r\n            class=\"details-map_link\"\r\n        ><v-icon color=\"darkGreen\">mdi-alert-circle</v-icon>\r\n            {{ $t('DetailsMap.moreInfo') }}</a>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { validURL } from '@/utils';\r\nexport default {\r\n    name: 'DetailsMap',\r\n    props: ['properties'],\r\n    methods: {\r\n        validURL(url) {\r\n            return validURL(url);\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.details-map_container {\r\n    background: #ded3af;\r\n    border-top-left-radius: 5px;\r\n    border-top-right-radius: 5px;\r\n    padding: 1% 2%;\r\n    color: black;\r\n    position: relative;\r\n    .details-map_link {\r\n        right: 0.6rem;\r\n        position: absolute;\r\n        bottom: 0.4rem;\r\n        text-decoration: none;\r\n        font-size: 0.9rem;\r\n        vertical-align: middle;\r\n        .v-icon {\r\n            font-size: 1.2rem;\r\n        }\r\n    }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DetailsMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DetailsMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DetailsMap.vue?vue&type=template&id=4d0af0f4&scoped=true&\"\nimport script from \"./DetailsMap.vue?vue&type=script&lang=js&\"\nexport * from \"./DetailsMap.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DetailsMap.vue?vue&type=style&index=0&id=4d0af0f4&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4d0af0f4\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VIcon } from 'vuetify/lib/components/VIcon';\ninstallComponents(component, {VIcon})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"map\"}},[_c('GmapMap',{ref:\"mapRef\",attrs:{\"id\":\"mapClassic\",\"center\":{ lat: 37.86926, lng: -122.254811 },\"zoom\":1,\"map-type-id\":\"roadmap\",\"options\":{\n            fullscreenControl: false,\n            mapTypeControl: false,\n            streetViewControl: false,\n            draggableCursor: 'crosshair',\n            clickableIcons: false,\n            styles: _vm.$vuetify.theme.dark ? _vm.$vuetify.theme.themes.dark.gmap : _vm.$vuetify.theme.themes.light.gmap\n        }}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const MapMixin = {\r\n   \r\n    props: ['bbox'],\r\n    watch: {\r\n        bbox() {\r\n            this.centerOnBbox();\r\n        },\r\n    },\r\n    methods: {\r\n        centerOnBbox() {\r\n            if (this.map) {\r\n                if (this.bbox) {\r\n                    this.map.fitBounds({\r\n                        east: this.bbox[2],\r\n                        north: this.bbox[3],\r\n                        south: this.bbox[1],\r\n                        west: this.bbox[0],\r\n                    });\r\n                } else {\r\n                    this.map.setZoom(0);\r\n                    this.map.setCenter({lat: 0, lng: 0});\r\n                }\r\n            }\r\n        },        \r\n        drawPolyline() {},\r\n        removePolylines() {},\r\n    }\r\n};\r\n\r\nexport default MapMixin;\r\n","<template>\r\n    <div id=\"map\">\r\n        <GmapMap\r\n            id=\"mapClassic\"\r\n            ref=\"mapRef\"\r\n            :center=\"{ lat: 37.86926, lng: -122.254811 }\"\r\n            :zoom=\"1\"\r\n            map-type-id=\"roadmap\"\r\n            :options=\"{\r\n                fullscreenControl: false,\r\n                mapTypeControl: false,\r\n                streetViewControl: false,\r\n                draggableCursor: 'crosshair',\r\n                clickableIcons: false,\r\n                styles: $vuetify.theme.dark ? $vuetify.theme.themes.dark.gmap : $vuetify.theme.themes.light.gmap\r\n            }\"\r\n        />\r\n    </div>\r\n</template>\r\n<script>\r\nimport { STROKE_COLORS } from '../../constants';\r\nimport MapMixin from './mixins/MapMixin';\r\n\r\nexport default {\r\n    name: 'Map',\r\n    mixins: [MapMixin],\r\n    data() {\r\n        return {\r\n            map: null,\r\n            marker: [],\r\n            markers: [],\r\n            polylines: [],\r\n            strokeColors: STROKE_COLORS,\r\n        };\r\n    },\r\n    async mounted() {\r\n        await this.$gmapApiPromiseLazy();\r\n        this.$refs.mapRef.$mapPromise.then((map) => {\r\n            this.map = map;\r\n\r\n            this.centerOnBbox();\r\n        });\r\n    },\r\n    methods: {\r\n        putMarker(position, isRandomLocation, label) {\r\n            let info = {};\r\n            if (isRandomLocation) {\r\n                info = {\r\n                    icon: {\r\n                        url: window.location.origin + '/img/icons/favicon-16x16.png',\r\n                        anchor: new google.maps.Point(8,8),\r\n                    }\r\n                };\r\n            }\r\n            if (label) {\r\n                info = {\r\n                    label,\r\n                };\r\n            }\r\n            const marker = new google.maps.Marker({\r\n                ...info,\r\n                position: position,\r\n                map: this.map,\r\n            });\r\n            this.markers.push(marker);\r\n        },\r\n        removeMarkers() {\r\n            for (var i = 0; i < this.markers.length; i++) {\r\n                this.markers[i].setMap(null);\r\n            }\r\n            this.markers = [];\r\n        },\r\n        setInfoWindow(playerName, distance, points, endGame = false) {\r\n            let dataToDisplay = '';\r\n            if (playerName !== null)\r\n                dataToDisplay += '<b>' + playerName + '</b>' + ' : <br/>';\r\n\r\n            if (distance < 1000) {\r\n                dataToDisplay +=\r\n                    '<b>' +\r\n                    this.$t('Maps.infoWindow.Distance') +\r\n                    ': </b>' +\r\n                    new Intl.NumberFormat(this.$i18n.locale, { style: \"unit\", unit:\"meter\" }).format(distance);\r\n            } else {\r\n                dataToDisplay +=\r\n                    '<b>' +\r\n                    this.$t('Maps.infoWindow.Distance') +\r\n                    ': </b>' +\r\n                    new Intl.NumberFormat(this.$i18n.locale, { style: \"unit\", unit:\"kilometer\" }).format(distance / 1000);\r\n            }\r\n\r\n            dataToDisplay +=\r\n                '<br/><b>' +\r\n                this.$t('Maps.infoWindow.Points') +\r\n                ': </b>' +\r\n                points;\r\n\r\n            const infoWindow = new google.maps.InfoWindow({\r\n                content: dataToDisplay,\r\n            });\r\n            infoWindow.open(\r\n                this.map,\r\n                this.markers[\r\n                    playerName || endGame ? this.markers.length - 1 : 0\r\n                ]\r\n            );\r\n        },\r\n        drawPolyline(selectedLatLng, i = 0, randomLatLng) {\r\n            const lineSymbol = {\r\n                path: \"M 0,-1 0,1\",\r\n                strokeOpacity: 1,\r\n                scale: 2,\r\n            };\r\n            const polyline = new google.maps.Polyline({\r\n                path: [selectedLatLng, randomLatLng],\r\n                strokeOpacity: 0,\r\n                strokeColor: this.strokeColors[i % this.strokeColors.length],\r\n                icons: [\r\n                    {\r\n                        icon: lineSymbol,\r\n                        offset: \"0\",\r\n                        repeat: \"10px\",\r\n                    },\r\n                ],\r\n            });\r\n            polyline.setMap(this.map);\r\n            this.polylines.push(polyline);\r\n        },\r\n        removePolylines() {\r\n            for (let i = 0; i < this.polylines.length; i++) {\r\n                this.polylines[i].setMap(null);\r\n            }\r\n        },\r\n        startNextRound() {\r\n            this.$refs.mapRef.$mapPromise.then(() => {\r\n                this.map.addListener('click', (e) => {\r\n                    // Clear the previous marker when clicking the map\r\n                    this.removeMarkers();\r\n\r\n                    // Show the new marker\r\n                    this.putMarker(e.latLng);\r\n\r\n                    // Save latLng\r\n                    this.$emit('setSeletedPos', e.latLng);\r\n                });\r\n                this.centerOnBbox();\r\n            });\r\n        },\r\n        removeListener() {\r\n            google.maps.event.clearListeners(this.map, 'click');\r\n        },\r\n        fitBounds() {\r\n            const bounds = new google.maps.LatLngBounds();\r\n\r\n            for (let i = 0; i < this.markers.length; i++) {\r\n                if (this.markers[i].getVisible()) {\r\n                    bounds.extend(this.markers[i].getPosition());\r\n                }\r\n            }\r\n\r\n            this.map.fitBounds(bounds);\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#mapClassic {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: var(--v-gmapBg-base);\r\n}\r\n\r\n.gm-style-iw {\r\n  color: black;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Map.vue?vue&type=template&id=4395e0c1&scoped=true&\"\nimport script from \"./Map.vue?vue&type=script&lang=js&\"\nexport * from \"./Map.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Map.vue?vue&type=style&index=0&id=4395e0c1&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4395e0c1\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"map-areas\",attrs:{\"id\":\"map\"}},[_c('div',{staticClass:\"map-content\"},[(_vm.polygonSelect || _vm.areaName)?_c('div',{staticClass:\"map-label\",attrs:{\"title\":_vm.areaName}},[(_vm.showFlag)?_c('FlagIcon',{attrs:{\"size\":\"big\",\"rounded\":\"\",\"iso-name\":_vm.areaRandom || _vm.areaNameSelect}}):_vm._e(),_c('span',{staticClass:\"map-label__country-name\",class:{\n                    beige: !_vm.areaRandom,\n                    green: !!_vm.areaRandom,\n                    'white--text': !!_vm.areaRandom,\n                    large: !_vm.showFlag,\n                }},[_vm._v(\" \"+_vm._s(_vm.areaName)+\" \")])],1):_vm._e(),_c('GmapMap',{ref:\"mapRef\",attrs:{\"id\":\"mapAreas\",\"center\":{ lat: 37.86926, lng: -122.254811 },\"zoom\":1,\"map-type-id\":\"roadmap\",\"options\":{\n                fullscreenControl: false,\n                mapTypeControl: false,\n                streetViewControl: false,\n                draggableCursor: 'crosshair',\n                clickableIcons: false,\n                styles: _vm.$vuetify.theme.dark ? _vm.$vuetify.theme.themes.dark.gmap : _vm.$vuetify.theme.themes.light.gmap,\n            }}})],1),(_vm.infoWindowDatas.length > 0)?_c('div',{staticClass:\"result-panel\"},_vm._l((_vm.infoWindowDatas),function(info){return _c('div',{key:info.playerName,staticClass:\"result-panel__item\",class:{ flag: _vm.showFlag }},[(_vm.showFlag)?_c('FlagIcon',{attrs:{\"iso-name\":info.area}}):_vm._e(),_c('b',[_vm._v(_vm._s(info.playerName))]),(!_vm.showFlag)?_c('span',[_vm._v(_vm._s(info.area))]):_vm._e()],1)}),0):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"map\" class=\"map-areas\">\r\n        <div class=\"map-content\">\r\n            <div\r\n                v-if=\"polygonSelect || areaName\"\r\n                class=\"map-label\"\r\n                :title=\"areaName\"\r\n            >\r\n                <FlagIcon\r\n                    v-if=\"showFlag\"\r\n                    size=\"big\"\r\n                    rounded\r\n                    :iso-name=\"areaRandom || areaNameSelect\"\r\n                />\r\n                <span\r\n                    class=\"map-label__country-name\"\r\n                    :class=\"{\r\n                        beige: !areaRandom,\r\n                        green: !!areaRandom,\r\n                        'white--text': !!areaRandom,\r\n                        large: !showFlag,\r\n                    }\"\r\n                >\r\n                    {{ areaName }}\r\n                </span>\r\n            </div>\r\n            <GmapMap\r\n                id=\"mapAreas\"\r\n                ref=\"mapRef\"\r\n                :center=\"{ lat: 37.86926, lng: -122.254811 }\"\r\n                :zoom=\"1\"\r\n                map-type-id=\"roadmap\"\r\n                :options=\"{\r\n                    fullscreenControl: false,\r\n                    mapTypeControl: false,\r\n                    streetViewControl: false,\r\n                    draggableCursor: 'crosshair',\r\n                    clickableIcons: false,\r\n                    styles: $vuetify.theme.dark ? $vuetify.theme.themes.dark.gmap : $vuetify.theme.themes.light.gmap,\r\n                }\"\r\n            />\r\n        </div>\r\n        <div v-if=\"infoWindowDatas.length > 0\" class=\"result-panel\">\r\n            <div\r\n                v-for=\"info in infoWindowDatas\"\r\n                :key=\"info.playerName\"\r\n                class=\"result-panel__item\"\r\n                :class=\"{ flag: showFlag }\"\r\n            >\r\n                <FlagIcon v-if=\"showFlag\" :iso-name=\"info.area\" />\r\n                <b>{{ info.playerName }}</b>\r\n                <span v-if=\"!showFlag\">{{ info.area }}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script type=\"text/javascript\">\r\nimport FlagIcon from '@/components/shared/FlagIcon';\r\nimport { mapActions, mapGetters } from 'vuex';\r\nimport MapMixin from './mixins/MapMixin';\r\n\r\nexport default {\r\n    mixins: [MapMixin],\r\n    components: {\r\n        FlagIcon,\r\n    },\r\n    props: {\r\n        area: {\r\n            type: String,\r\n        },\r\n        areasGeoJsonUrl: String,\r\n        pathKey: {\r\n            type: String,\r\n            default: 'iso_a2',\r\n        },\r\n        showFlag: Boolean,\r\n    },\r\n    data() {\r\n        return {\r\n            map: null,\r\n            polygonSelect: null,\r\n            areas: {},\r\n            markers: [],\r\n            allowSelect: true,\r\n            areaRandom: null,\r\n            randomPos: null,\r\n            infoWindowDatas: [],\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters(['areasJson']),\r\n        areaName() {\r\n            if (this.showFlag && (this.areaRandom || this.polygonSelect)) {\r\n                return this.$countryNameLocale(\r\n                    this.areaRandom || this.areaNameSelect\r\n                );\r\n            } else {\r\n                return this.areaRandom || this.areaNameSelect;\r\n            }\r\n        },\r\n        areaNameSelect() {\r\n            return this.polygonSelect\r\n                ? this.polygonSelect\r\n                      .getFeatureById('feature')\r\n                      .getProperty(this.pathKey)\r\n                : undefined;\r\n        },\r\n    },\r\n    async mounted() {\r\n        await this.loadAreas(this.areasGeoJsonUrl);\r\n        await this.$gmapApiPromiseLazy();\r\n        this.$refs.mapRef.$mapPromise.then((map) => {\r\n            this.map = map;\r\n            this.areasJson.features.forEach((c) => {\r\n                if (Array.isArray(c.geometry.coordinates)) {\r\n                    const p = new google.maps.Data({\r\n                        style: {\r\n                            strokeOpacity: 0,\r\n                            fillOpacity: 0,\r\n                            strokeWeight: 2,\r\n                        },\r\n                    });\r\n                    c.id = 'feature';\r\n                    p.addGeoJson(c);\r\n\r\n                    p.setMap(this.map);\r\n                    p.addListener('click', () => {\r\n                        if (!this.allowSelect) {\r\n                            return;\r\n                        }\r\n                        if (this.polygonSelect) {\r\n                            this.polygonSelect.setStyle({\r\n                                strokeOpacity: 0,\r\n                                fillOpacity: 0,\r\n                            });\r\n                        }\r\n                        if (Object.is(p, this.polygonSelect)) {\r\n                            this.polygonSelect = null;\r\n                            this.$emit('setSeletedPos', null);\r\n                        } else {\r\n                            p.setStyle({\r\n                                strokeOpacity: 0.8,\r\n                                fillOpacity: 0.3,\r\n                                strokeColor: '#1E3A8A',\r\n                                fillColor: '#1D4ED8',\r\n                            });\r\n\r\n                            this.polygonSelect = p;\r\n                            this.$emit(\r\n                                'setSeletedPos',\r\n                                p\r\n                                    .getFeatureById('feature')\r\n                                    .getProperty(this.pathKey)\r\n                            );\r\n                        }\r\n                    });\r\n                    this.areas[c.properties[this.pathKey]] = p;\r\n                }\r\n            });\r\n            this.centerOnBbox();\r\n        });\r\n    },\r\n    methods: {\r\n        ...mapActions(['loadAreas']),\r\n        putMarker(pos, isRandomLocation, area) {\r\n            const areaName = isRandomLocation ? area || this.area : pos;\r\n            if (isRandomLocation) {\r\n                this.areaRandom = this.area;\r\n                this.randomPos = new google.maps.Marker({\r\n                    position: pos,\r\n                    map: this.map,\r\n                });\r\n            }\r\n            if (this.areas[areaName]) {\r\n                this.areas[areaName].setStyle({\r\n                    fillOpacity: 0.3,\r\n                    strokeOpacity: 0.8,\r\n                    fillColor: isRandomLocation ? '#52DA42' : '#FF4081',\r\n                    strokeColor: isRandomLocation ? '#16A910' : '#FF4081',\r\n                });\r\n                this.markers.push(areaName);\r\n            }\r\n        },\r\n        removeMarkers() {\r\n            this.markers.forEach((areaName) => {\r\n                this.areas[areaName].setStyle({\r\n                    strokeOpacity: 0,\r\n                    fillOpacity: 0,\r\n                });\r\n            });\r\n            if (this.polygonSelect) {\r\n                this.polygonSelect.setStyle({\r\n                    strokeOpacity: 0,\r\n                    fillOpacity: 0,\r\n                });\r\n            }\r\n            if (this.randomPos) {\r\n                this.randomPos.setMap(null);\r\n                this.randomPos = null;\r\n            }\r\n            this.markers = [];\r\n            this.infoWindowDatas = [];\r\n        },\r\n        setInfoWindow(playerName, _distance, _points, _endGame, area) {\r\n            if (playerName) this.infoWindowDatas.push({ playerName, area });\r\n        },\r\n        startNextRound() {\r\n            if (this.polygonSelect) {\r\n                this.polygonSelect.setStyle({\r\n                    strokeOpacity: 0,\r\n                    fillOpacity: 0,\r\n                });\r\n            }\r\n            this.polygonSelect = null;\r\n            this.areaRandom = null;\r\n            this.allowSelect = true;\r\n\r\n            this.centerOnBbox();\r\n        },\r\n        removeListener() {\r\n            this.allowSelect = false;\r\n        },\r\n        fitBounds() {\r\n            if (this.bbox) {\r\n                this.centerOnBbox();\r\n            } else {\r\n                this.map.setZoom(2);\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#map {\r\n    overflow: hidden;\r\n    display: flex;\r\n    .result-panel {\r\n        height: 100%;\r\n        padding: 2%;\r\n        background: var(--v-card-base);\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 30%;\r\n        .result-panel__item {\r\n            display: grid;\r\n            grid-template-rows: auto auto;\r\n\r\n            &.flag {\r\n                display: inline-grid;\r\n                grid-template-columns: 42px auto;\r\n                grid-column-gap: 5px;\r\n                align-items: center;\r\n            }\r\n        }\r\n    }\r\n    .map-content {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        #mapAreas {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .map-label {\r\n            z-index: 5;\r\n            position: absolute;\r\n            top: 1rem;\r\n            left: 1rem;\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n            justify-content: center;\r\n\r\n            .map-label__country-name {\r\n                &.large {\r\n                    width: fit-content;\r\n                }\r\n                width: 7rem;\r\n                text-align: center;\r\n                text-overflow: ellipsis;\r\n                white-space: nowrap;\r\n                overflow: hidden;\r\n                background: var(--v-primary-base);\r\n                margin-top: 0.2rem;\r\n                padding: 0.1% 5%;\r\n                border-radius: 5px;\r\n                font-weight: 500;\r\n            }\r\n        }\r\n    }\r\n}\r\n@media (max-width: 450px) {\r\n    #map.map-areas {\r\n        display: grid !important;\r\n        grid-auto-rows: auto 30vw;\r\n        .result-panel {\r\n            width: 100%;\r\n            overflow-y: auto;\r\n        }\r\n    }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapAreas.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapAreas.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MapAreas.vue?vue&type=template&id=30884500&scoped=true&\"\nimport script from \"./MapAreas.vue?vue&type=script&lang=js&\"\nexport * from \"./MapAreas.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MapAreas.vue?vue&type=style&index=0&id=30884500&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"30884500\",\n  null\n  \n)\n\nexport default component.exports","import { SCORE_MODE } from '../../constants';\r\n\r\nexport function getScore(distance, difficulty, time, mode) {\r\n    switch (mode) {\r\n        case SCORE_MODE.TIME:\r\n            return Math.round(\r\n                getScoreNormal(distance, difficulty) * Math.exp(-time / 6000000)\r\n            );\r\n\r\n        default:\r\n            return getScoreNormal(distance, difficulty);\r\n    }\r\n}\r\n\r\nfunction getScoreNormal(distance, difficulty) {\r\n    if (distance < 50) {\r\n        return 5000;\r\n    } else {\r\n        const point = Math.round(\r\n            5000 * Math.exp(-(distance / 1000 / difficulty))\r\n        );\r\n\r\n        if (point > 5000) {\r\n            return 5000;\r\n        } else if (point < 0) {\r\n            return 0;\r\n        }\r\n        return point;\r\n    }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.guessString && !_vm.$vuetify.breakpoint.mobile && _vm.leaderboardShown)?_c('v-alert',{staticClass:\"mt-2 mr-2\",attrs:{\"id\":\"leaderboard-alert\",\"transition\":\"slide-x-transition\",\"icon\":\"mdi-scoreboard-outline\",\"width\":\"400\",\"dark\":\"\"}},[_vm._v(\" \"+_vm._s(_vm.guessString)+\" \")]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-alert\r\n        id=\"leaderboard-alert\"\r\n        transition=\"slide-x-transition\"\r\n        icon=\"mdi-scoreboard-outline\"\r\n        width=\"400\"\r\n        dark\r\n        class=\"mt-2 mr-2\"\r\n        v-if=\"guessString && !$vuetify.breakpoint.mobile && leaderboardShown\"\r\n\r\n    >\r\n        {{ guessString }}\r\n    </v-alert>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Leaderboard\",\r\n    props: [\"guessString\", \"leaderboardShown\"]\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n#leaderboard-alert {\r\n    opacity: 0.8;\r\n    white-space: pre-line;\r\n    float: right;\r\n    pointer-events: none;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Leaderboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Leaderboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Leaderboard.vue?vue&type=template&id=70950fcb&scoped=true&\"\nimport script from \"./Leaderboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Leaderboard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Leaderboard.vue?vue&type=style&index=0&id=70950fcb&prod&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"70950fcb\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAlert } from 'vuetify/lib/components/VAlert';\ninstallComponents(component, {VAlert})\n","<template>\r\n    <div\r\n        id=\"container-map\"\r\n        :class=\"[\r\n            ($viewport.width >= 450 && (activeMap || pinActive)) ||\r\n                isMakeGuessButtonClicked ||\r\n                isNextButtonVisible\r\n                ? 'container-map--active'\r\n                : '',\r\n            printMapFull ? 'container-map--full' : '',\r\n            `container-map--size-${size}`,\r\n        ]\"\r\n        v-on=\"\r\n            $viewport.width >= 450 // Only on tablet and desktop Issue #104\r\n                ? {\r\n                    mouseover: () => {\r\n                        activeMap = true;\r\n                    },\r\n                    mouseleave: () => {\r\n                        activeMap = false;\r\n                    },\r\n                }\r\n                : {}\r\n        \"\r\n    >\r\n        <div class=\"container-map_details\">\r\n            <div class=\"alert-container\">\r\n                <Leaderboard\r\n                    :leaderboard-shown=\"leaderboardShown\"\r\n                    :guess-string=\"guessString\"\r\n                ></Leaderboard>\r\n            </div>\r\n            <DetailsMap\r\n                v-if=\"printMapFull\"\r\n                :properties=\"randomFeatureProperties\"\r\n            />\r\n        </div>\r\n\r\n        <div class=\"container-map_controls\">\r\n            <div class=\"container-map_btns\">\r\n                <v-btn fab x-small @click=\"showNotepad\">\r\n                    <v-icon dark> mdi-file-document-edit </v-icon>\r\n                </v-btn>\r\n\r\n                <v-btn\r\n                    id=\"btnDown\"\r\n                    fab\r\n                    x-small\r\n                    :disabled=\"size < 2\"\r\n                    @click=\"size--\"\r\n                >\r\n                    <v-icon dark> mdi-arrow-bottom-left </v-icon>\r\n                </v-btn>\r\n\r\n                <v-btn\r\n                    id=\"btnUp\"\r\n                    fab\r\n                    x-small\r\n                    :disabled=\"size > 3\"\r\n                    @click=\"size++\"\r\n                >\r\n                    <v-icon dark> mdi-arrow-top-right </v-icon>\r\n                </v-btn>\r\n\r\n                <v-btn id=\"btnPin\" fab x-small @click=\"pinActive = !pinActive\">\r\n                    <v-icon dark> mdi-pin{{ pinActive ? '-off' : '' }} </v-icon>\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n        <v-btn\r\n            v-if=\"\r\n                $viewport.width < 450 &&\r\n                    !isGuessButtonClicked &&\r\n                    isMakeGuessButtonClicked\r\n            \"\r\n            id=\"hide-map-button\"\r\n            fab\r\n            x-small\r\n            color=\"red\"\r\n            @click=\"hideMap\"\r\n        >\r\n            <v-icon color=\"white\"> mdi-close </v-icon>\r\n        </v-btn>\r\n        <Map\r\n            v-if=\"this.mode === 'classic'\"\r\n            id=\"map\"\r\n            ref=\"map\"\r\n            :bbox=\"bbox\"\r\n            @setSeletedPos=\"setSeletedPos\"\r\n        />\r\n        <MapAreas\r\n            v-if=\"this.mode !== 'classic'\"\r\n            id=\"map\"\r\n            ref=\"map\"\r\n            :area=\"area\"\r\n            :areasGeoJsonUrl=\"areasGeoJsonUrl\"\r\n            :pathKey=\"pathKey\"\r\n            :bbox=\"bbox\"\r\n            :showFlag=\"this.mode === 'country'\"\r\n            @setSeletedPos=\"setSeletedPos\"\r\n        />\r\n        <textarea\r\n            class=\"container-map_notepad\"\r\n            v-show=\"isNotepadVisible\"\r\n            spellcheck=\"false\"\r\n            v-if=\"!printMapFull\"\r\n            ref=\"refNotepad\"\r\n        />\r\n        <button\r\n            v-if=\"\r\n                !isNextButtonVisible &&\r\n                    !isSummaryButtonVisible &&\r\n                    ($viewport.width > 450 || isMakeGuessButtonClicked)\r\n            \"\r\n            id=\"guess-button\"\r\n            :disabled=\"\r\n                randomLatLng == null ||\r\n                    selectedPos == null ||\r\n                    isGuessButtonClicked ||\r\n                    (!!this.room && !isReady)\r\n            \"\r\n            @click=\"selectLocation\"\r\n        >\r\n            {{ $t('Maps.guess') }}\r\n        </button>\r\n        <button\r\n            v-if=\"isNextButtonVisible\"\r\n            id=\"next-button\"\r\n            :disabled=\"!isNextButtonEnabled\"\r\n            :style=\"{\r\n                backgroundColor: isNextButtonEnabled ? '#F44336' : '#B71C1C',\r\n            }\"\r\n            @click=\"goToNextRound(false)\"\r\n        >\r\n            {{ $t('Maps.nextRound') }}\r\n        </button>\r\n        <button\r\n            v-if=\"isSummaryButtonVisible\"\r\n            id=\"summary-button\"\r\n            @click=\"dialogSummary = true\"\r\n        >\r\n            {{ $t('Maps.viewSummary') }}\r\n        </button>\r\n\r\n        <button\r\n            v-if=\"\r\n                $viewport.width < 450 &&\r\n                    !isGuessButtonClicked &&\r\n                    !isMakeGuessButtonClicked &&\r\n                    !isNextButtonVisible\r\n            \"\r\n            id=\"make-guess-button\"\r\n            class=\"primary\"\r\n            @click=\"showMap\"\r\n        >\r\n            {{ $t('Maps.makeGuess') }}\r\n        </button>\r\n        <DialogSummary\r\n            :dialog-summary=\"dialogSummary\"\r\n            :summary-texts=\"summaryTexts\"\r\n            :score=\"score\"\r\n            :player-name=\"playerName\"\r\n            :points=\"points\"\r\n            :game=\"game\"\r\n            :multiplayer=\"!!room\"\r\n            :mapDetails=\"mapDetails\"\r\n            :nb-round=\"nbRound\"\r\n            @finishGame=\"finishGame\"\r\n            @playAgain=\"goToNextRound(true)\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nimport DialogSummary from '@/components/DialogSummary';\r\nimport DetailsMap from '@/components/game/DetailsMap';\r\nimport Map from '@/components/map/Map';\r\nimport MapAreas from '@/components/map/MapAreas';\r\nimport { GAME_MODE } from '../constants';\r\nimport { getSelectedPos } from '../utils';\r\nimport { getScore } from '../utils/game/score';\r\nimport Leaderboard from \"@/components/game/Leaderboard.vue\";\r\n\r\nexport default {\r\n    components: {\r\n        Leaderboard,\r\n        DialogSummary,\r\n        DetailsMap,\r\n        Map,\r\n        MapAreas,\r\n    },\r\n    props: [\r\n        'randomLatLng',\r\n        'randomFeatureProperties',\r\n        'roomName',\r\n        'playerNumber',\r\n        'playerName',\r\n        'isReady',\r\n        'round',\r\n        'score',\r\n        'points',\r\n        'timeLimitation',\r\n        'difficulty',\r\n        'bbox',\r\n        'mode',\r\n        'area',\r\n        'timeAttack',\r\n        'nbRound',\r\n        'countdown',\r\n        'scoreMode',\r\n        'areasGeoJsonUrl',\r\n        'pathKey',\r\n        'mapDetails',\r\n        'scoreLeaderboard',\r\n        'guessedLeaderboard',\r\n        'leaderboardShown',\r\n        'guessString'\r\n    ],\r\n    data() {\r\n        return {\r\n            summaryTexts: [],\r\n            room: null,\r\n            selectedPos: null,\r\n            distance: null,\r\n            point: null,\r\n            isGuessButtonClicked: false,\r\n            isMakeGuessButtonClicked: false,\r\n            isSelected: false,\r\n            isNextStreetViewReady: false,\r\n            isNextButtonVisible: false,\r\n            isSummaryButtonVisible: false,\r\n            dialogSummary: false,\r\n            activeMap: false,\r\n            size: 2,\r\n            isNotepadVisible: false,\r\n            pinActive: localStorage.getItem('pinActive') === 'true',\r\n            printMapFull: false,\r\n            countdownStarted: false,\r\n            game: {\r\n                multiplayer: !!this.roomName,\r\n                date: new Date(),\r\n                rounds: [],\r\n            },\r\n            startTime: null,\r\n        };\r\n    },\r\n    computed: {\r\n        isNextButtonEnabled() {\r\n            if (this.playerNumber == 1 || !this.room) {\r\n                return true;\r\n            } else {\r\n                if (this.isNextStreetViewReady) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n      pinActive() {\r\n        localStorage.setItem('pinActive', this.pinActive);\r\n      },\r\n      printMapFull(value) {\r\n        this.$emit('printMapFull', value);\r\n      }\r\n    },\r\n    async mounted() {\r\n        await this.$gmapApiPromiseLazy();\r\n        this.game.timeLimitation = this.timeLimitation;\r\n        this.game.difficulty = this.difficulty;\r\n        this.game.mode = this.mode;\r\n        this.game.timeAttack = this.timeAttack;\r\n        this.game.playerName = this.playerName;\r\n        let size = 0;\r\n\r\n        if (this.roomName) {\r\n            this.room = firebase.database().ref(this.roomName);\r\n\r\n            this.room.on('value', (snapshot) => {\r\n                if (snapshot.hasChild('active')) {\r\n                    size = snapshot.child('size').val();\r\n                    if (size === 1) {\r\n                        this.room.onDisconnect().remove();\r\n                    } else {\r\n                        this.room.onDisconnect().update({ size: size - 1 });\r\n                    }\r\n                    if (\r\n                        // If Time Attack and 1st true guess finish round\r\n                        (this.timeAttack &&\r\n                            this.countdown === 0 &&\r\n                            snapshot.child('guess').numChildren() >= 1 &&\r\n                            snapshot\r\n                                .child('guess')\r\n                                .forEach(\r\n                                    (guess) =>\r\n                                        guess.child('area').val() === this.area\r\n                                )) ||\r\n                        // Allow players to move on to the next round when every players guess locations\r\n                        snapshot.child('guess').numChildren() === size\r\n                    ) {\r\n                        this.game.timeLimitation = this.timeLimitation;\r\n                        this.isNextStreetViewReady = false;\r\n\r\n                        this.$emit('showResult');\r\n\r\n                        // Put markers and draw polylines on the map\r\n                        let i = 0;\r\n                        let players = {};\r\n                        snapshot.child('guess').forEach((childSnapshot) => {\r\n                            let posGuess;\r\n                            if (this.mode === GAME_MODE.CLASSIC) {\r\n                                const lat = childSnapshot\r\n                                    .child('latitude')\r\n                                    .val();\r\n                                const lng = childSnapshot\r\n                                    .child('longitude')\r\n                                    .val();\r\n                                posGuess = new google.maps.LatLng({\r\n                                    lat: lat,\r\n                                    lng: lng,\r\n                                });\r\n                            } else {\r\n                                posGuess = childSnapshot.child('area').val();\r\n                            }\r\n\r\n                            const playerName = snapshot\r\n                                .child('playerName')\r\n                                .child(childSnapshot.key)\r\n                                .val();\r\n                            const roundValues = snapshot\r\n                                .child('round' + this.round + '/' + childSnapshot.key)\r\n                                .exportVal();\r\n\r\n                            const { points, distance } = roundValues;\r\n\r\n                            players[playerName] = {\r\n                                ...roundValues,\r\n                                guess: posGuess,\r\n                            };\r\n                            this.$refs.map.drawPolyline(\r\n                                posGuess,\r\n                                i,\r\n                                this.randomLatLng\r\n                            );\r\n                            this.$refs.map.putMarker(\r\n                                posGuess,\r\n                                false,\r\n                                playerName && playerName.length > 0\r\n                                    ? playerName[0].toUpperCase()\r\n                                    : ''\r\n                            );\r\n                            this.$refs.map.setInfoWindow(\r\n                                playerName,\r\n                                distance,\r\n                                points,\r\n                                false,\r\n                                posGuess\r\n                            );\r\n                            i++;\r\n                        });\r\n                        this.$refs.map.fitBounds();\r\n                        this.game.rounds.push({\r\n                            position: {\r\n                                ...this.randomLatLng.toJSON(),\r\n                                area: this.area,\r\n                            },\r\n                            players,\r\n                        });\r\n                        this.$refs.map.putMarker(this.randomLatLng, true);\r\n\r\n                        this.printMapFull = true;\r\n                        // Remove guess node every time the round is done\r\n                        this.room.child('guess').remove();\r\n\r\n                        if (this.round >= this.nbRound) {\r\n                            // Show summary button\r\n                            snapshot\r\n                                .child('finalPoints')\r\n                                .forEach((childSnapshot) => {\r\n                                    const playerName = snapshot\r\n                                        .child('playerName')\r\n                                        .child(childSnapshot.key)\r\n                                        .val();\r\n                                    const finalScore = snapshot\r\n                                        .child('finalScore')\r\n                                        .child(childSnapshot.key)\r\n                                        .val();\r\n                                    const finalPoints = childSnapshot.val();\r\n                                    this.summaryTexts.push({\r\n                                        playerName: playerName,\r\n                                        finalScore: finalScore,\r\n                                        finalPoints: finalPoints,\r\n                                    });\r\n                                });\r\n\r\n                            this.summaryTexts.sort(\r\n                                (a, b) =>\r\n                                    parseInt(b.finalPoints) -\r\n                                    parseInt(a.finalPoints)\r\n                            );\r\n\r\n                            this.isSummaryButtonVisible = true;\r\n                        } else {\r\n                            // Show next button\r\n                            this.isNextButtonVisible = true;\r\n                        }\r\n                    }\r\n\r\n                    // Allow other players to move on to the next round when the next street view is set\r\n                    if (\r\n                        snapshot.child('streetView').numChildren() ==\r\n                        this.round + 1\r\n                    ) {\r\n                        this.isNextStreetViewReady = true;\r\n                    }\r\n\r\n                    if (\r\n                        !this.countdownStarted &&\r\n                        !this.printMapFull &&\r\n                        this.countdown > 0 &&\r\n                        snapshot.child('guess').numChildren() >= 1\r\n                    ) {\r\n                        this.$parent.initTimer(this.countdown, true);\r\n\r\n                        this.countdownStarted = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n    methods: {\r\n        setSeletedPos(pos) {\r\n            this.selectedPos = pos;\r\n        },\r\n        showMap() {\r\n            this.isMakeGuessButtonClicked = true;\r\n        },\r\n        hideMap() {\r\n            this.isMakeGuessButtonClicked = false;\r\n        },\r\n        showNotepad() {\r\n            this.isNotepadVisible = !this.isNotepadVisible;\r\n            if (this.isNotepadVisible) {\r\n                setTimeout(() => {\r\n                    this.$refs.refNotepad.focus();\r\n                });\r\n            }\r\n        },\r\n        selectLocation() {\r\n            this.calculateDistance();\r\n\r\n            if (this.room) {\r\n                // Save the selected location into database\r\n                // So that it uses for putting the markers and polylines\r\n                this.room\r\n                    .child('guess/player' + this.playerNumber)\r\n                    .set(getSelectedPos(this.selectedPos, this.mode));\r\n            } else {\r\n                // Put the marker on the random location\r\n                this.$refs.map.putMarker(this.randomLatLng, true);\r\n                // Show the polyline\r\n                this.$refs.map.drawPolyline(\r\n                    this.selectedPos,\r\n                    1,\r\n                    this.randomLatLng\r\n                );\r\n\r\n                this.$refs.map.setInfoWindow(\r\n                    null,\r\n                    this.distance,\r\n                    this.point,\r\n                    false,\r\n                    this.setSeletedPos\r\n                );\r\n                this.printMapFull = true;\r\n                this.$refs.map.fitBounds();\r\n                if (this.round >= this.nbRound) {\r\n                    this.isSummaryButtonVisible = true;\r\n                } else {\r\n                    this.isNextButtonVisible = true;\r\n                }\r\n                this.$emit('showResult');\r\n            }\r\n            // Clear the event\r\n            this.$refs.map.removeListener();\r\n\r\n            // Diable guess button and opacity of the map\r\n            this.isGuessButtonClicked = true;\r\n            this.isSelected = true;\r\n\r\n            // Turn off the flag before the next button appears\r\n            this.isNextStreetViewReady = false;\r\n        },\r\n        selectRandomLocation(randomLatLng) {\r\n            if (this.selectedPos === null) {\r\n                // set a random location if the player didn't select in time\r\n                this.selectedPos = randomLatLng;\r\n                this.$refs.map.removeMarkers();\r\n                this.$refs.map.putMarker(this.selectedPos);\r\n            }\r\n            this.selectLocation();\r\n        },\r\n        resetLocation() {\r\n            this.$emit('resetLocation');\r\n        },\r\n        calculateDistance() {\r\n            const timePassed = new Date() - this.startTime;\r\n            if (\r\n                [GAME_MODE.COUNTRY, GAME_MODE.CUSTOM_AREA].includes(this.mode)\r\n            ) {\r\n                this.point = +(this.area === this.selectedPos);\r\n                this.distance = null;\r\n            } else {\r\n                this.distance = Math.floor(\r\n                    google.maps.geometry.spherical.computeDistanceBetween(\r\n                        this.randomLatLng,\r\n                        this.selectedPos\r\n                    )\r\n                );\r\n\r\n                this.point = getScore(\r\n                    this.distance,\r\n                    this.difficulty,\r\n                    timePassed,\r\n                    this.scoreMode\r\n                );\r\n            }\r\n            // Save the distance into firebase\r\n            if (this.room) {\r\n                this.room\r\n                    .child('round' + this.round + '/player' + this.playerNumber)\r\n                    .set({\r\n                        ...getSelectedPos(this.selectedPos, this.mode),\r\n                        distance: this.distance,\r\n                        points: this.point,\r\n                        timePassed,\r\n                    });\r\n            } else {\r\n                this.game.rounds.push({\r\n                    guess: this.selectedPos,\r\n                    area: this.area,\r\n                    position: this.randomLatLng,\r\n                    distance: this.distance,\r\n                    points: this.point,\r\n                    timePassed,\r\n                });\r\n            }\r\n\r\n            this.$emit('calculateDistance', this.distance, this.point);\r\n        },\r\n        startNextRound() {\r\n            this.$refs.map.startNextRound();\r\n            this.startTime = new Date();\r\n        },\r\n        goToNextRound(isPlayAgain = false) {\r\n            if (isPlayAgain) {\r\n                this.dialogSummary = false;\r\n                this.isSummaryButtonVisible = false;\r\n            }\r\n\r\n            // Reset\r\n            this.selectedPos = null;\r\n            this.isGuessButtonClicked = false;\r\n            this.isSelected = false;\r\n            this.isNextButtonVisible = false;\r\n            this.countdownStarted = false;\r\n            this.isNotepadVisible = false;\r\n\r\n            if (this.$viewport.width < 450) {\r\n                // Hide the map if the player is on mobile\r\n                this.hideMap();\r\n            }\r\n\r\n            this.printMapFull = false;\r\n            this.$refs.map.removeMarkers();\r\n            this.$refs.map.removePolylines();\r\n            this.$refs.map.centerOnBbox();\r\n\r\n            // Replace the streetview with the next one\r\n            this.$emit('goToNextRound', isPlayAgain);\r\n        },\r\n        finishGame() {\r\n            this.dialogSummary = false;\r\n            if (this.room)\r\n                this.room\r\n                    .child('isGameDone/player' + this.playerNumber)\r\n                    .set(true);\r\n            this.$emit('finishGame');\r\n        },\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.alert-container {\r\n    position: absolute;\r\n    right: 0;\r\n    .v-alert {\r\n        z-index: 2;\r\n    }\r\n}\r\n\r\n#container-map {\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 10px;\r\n    z-index: 3;\r\n    opacity: 0.7;\r\n    width: var(--width);\r\n    height: var(--height);\r\n    z-index: 3;\r\n    --aspect-ratio: 1.25;\r\n    --inactive-width: 16vw;\r\n    --active-width: 30vw;\r\n    --active-height: calc(var(--active-width) / var(--aspect-ratio));\r\n    --inactive-height: calc(var(--inactive-width) / var(--aspect-ratio));\r\n    --height: var(--inactive-height);\r\n    --width: var(--inactive-width);\r\n    max-width: 100%;\r\n    max-height: calc(100% - 150px);\r\n    transition: 0.3s;\r\n    #map {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    &.container-map--size-1 {\r\n        --active-width: 16vw;\r\n    }\r\n    &.container-map--size-3 {\r\n        --active-width: 45vw;\r\n    }\r\n    &.container-map--size-4 {\r\n        --active-width: 65vw;\r\n    }\r\n    &.container-map--active {\r\n        opacity: 1;\r\n        --width: var(--active-width);\r\n        --height: var(--active-height);\r\n        .container-map_controls {\r\n            display: flex;\r\n        }\r\n    }\r\n    &.container-map--full {\r\n        transition: none;\r\n        opacity: 1;\r\n        --active-width: 85vw;\r\n        --inactive-width: 85vw;\r\n        position: relative;\r\n        margin: auto;\r\n        .container-map_controls {\r\n            display: none;\r\n        }\r\n        .container-map_details {\r\n            display: block;\r\n            position: relative;\r\n        }\r\n    }\r\n\r\n    .container-map_details {\r\n        display: none;\r\n    }\r\n    .container-map_controls {\r\n        .container-map_btns {\r\n            background-color: rgba(33, 33, 33);\r\n            padding: 0.2rem;\r\n            border-top-left-radius: 5%;\r\n            border-top-right-radius: 5%;\r\n        }\r\n        button {\r\n            width: 1.5rem;\r\n            height: 1.5rem;\r\n            margin: 0 0.5rem;\r\n        }\r\n        display: flex;\r\n        flex-direction: row-reverse;\r\n    }\r\n\r\n    .container-map_notepad {\r\n        position: absolute;\r\n        background-color: var(--v-notepad-base);\r\n        resize: none;\r\n        left: var(--width);\r\n        margin-left: 10px;\r\n        transition: 0.3s;\r\n        width: 300px;\r\n        height: calc(100% - 74px);\r\n        top: 30px;\r\n        border-radius: 3px;\r\n        outline: none;\r\n        padding: 5px;\r\n        box-shadow: 0px 2px 8px 0px rgba(99, 99, 99, 0.2);\r\n    }\r\n\r\n    .theme--dark & .container-map_notepad {\r\n        color: #fff;\r\n    }\r\n    .theme--light & .container-map_notepad {\r\n        color: #000;\r\n    }\r\n}\r\n\r\n#make-guess-button,\r\n#guess-button,\r\n#next-button,\r\n#summary-button,\r\n#reset-button,\r\n#play-again-button {\r\n    border: none;\r\n    border-bottom-right-radius: 5px;\r\n    border-bottom-left-radius: 5px;\r\n    opacity: 0.8;\r\n    color: white;\r\n    font-size: 16px;\r\n    text-decoration: none;\r\n    text-align: center;\r\n    padding: 10px 0;\r\n    z-index: 999;\r\n}\r\n\r\n\r\n#reset-button {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    width: 25%;\r\n    background-color: #ff5e5e;\r\n}\r\n\r\n#next-button,\r\n#summary-button:not(.w-50) {\r\n    width: 100%;\r\n}\r\nbutton.w-50 {\r\n    width: 50%;\r\n}\r\n#make-guess-button,\r\n#guess-button {\r\n    background-color: #212121;\r\n}\r\n\r\n#guess-button:hover,\r\n#reset-button {\r\n    opacity: 1;\r\n}\r\n\r\n#play-again-button {\r\n    background-color: #43b581;\r\n}\r\n\r\n#next-button,\r\n#summary-button {\r\n    background-color: #f44336;\r\n}\r\n\r\n@media (max-width: 750px) {\r\n    #container-map {\r\n        --inactive-width: 25vw;\r\n\r\n        &.container-map--size-1 {\r\n            --active-width: 25vw;\r\n        }\r\n    }\r\n}\r\n\r\n@media (max-width: 450px) {\r\n    #container-map {\r\n        width: 100%;\r\n        opacity: 1;\r\n        height: auto;\r\n        left: 0;\r\n        bottom: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        .container-map_controls {\r\n            display: none;\r\n        }\r\n        .container-map_notepad {\r\n            display: none;\r\n        }\r\n        #map {\r\n            display: none;\r\n        }\r\n        &.container-map--active #map {\r\n            display: block;\r\n        }\r\n\r\n        &.container-map--active .container-map_controls {\r\n            display: none;\r\n        }\r\n        &.container-map--active {\r\n            height: 40vh;\r\n        }\r\n        &.container-map--full {\r\n            position: absolute;\r\n            --width: 100%;\r\n            height: calc(100% - 64px);\r\n            bottom: 0;\r\n            margin: 0;\r\n            max-height: 100%;\r\n        }\r\n        .container-map_controls_guess {\r\n            z-index: 999;\r\n        }\r\n    }\r\n\r\n    #make-guess-button,\r\n    #next-button,\r\n    #reset-button,\r\n    #guess-button,\r\n    #summary-button {\r\n        border-radius: 0;\r\n        opacity: 1;\r\n        bottom: 0;\r\n        width: 100%;\r\n    }\r\n\r\n\r\n    #hide-map-button {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        z-index: 4;\r\n    }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Maps.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Maps.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Maps.vue?vue&type=template&id=446a4f7e&scoped=true&\"\nimport script from \"./Maps.vue?vue&type=script&lang=js&\"\nexport * from \"./Maps.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Maps.vue?vue&type=style&index=0&id=446a4f7e&prod&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"446a4f7e\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\ninstallComponents(component, {VBtn,VIcon})\n","import bbox from '@turf/bbox';\r\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\r\nimport * as turfModel from '@turf/helpers';\r\nimport randomPositionInPolygon from 'random-position-in-polygon';\r\nimport { AREA_MODE, GAME_MODE } from '../constants';\r\nimport {\r\n    getAreaCodeNameFromLatLng,\r\n    getMaxDistanceBbox,\r\n    isInGeoJSON\r\n} from '../utils';\r\n\r\nclass StreetViewService {\r\n    constructor(\r\n        settingsPanorama,\r\n        settingsGame,\r\n        placeGeoJson,\r\n        roundsPredefined\r\n    ) {\r\n        this.settingsPanorama = settingsPanorama;\r\n        this.settingsGame = settingsGame;\r\n        this.placeGeoJson = placeGeoJson;\r\n        this.roundsPredefined = roundsPredefined;\r\n        this.service = new google.maps.StreetViewService();\r\n        this.alreadyVisited = [];\r\n    }\r\n\r\n    async getStreetView(round, cptNotFoundLocation = 0) {\r\n        let radius, position, randomFeatureProperties;\r\n        if (this.roundsPredefined) {\r\n            radius = 50;\r\n            const positions = this.roundsPredefined[round - 1];\r\n            position = new google.maps.LatLng(positions[0], positions[1]);\r\n        } else {\r\n            let randomPos;\r\n            do{\r\n                randomPos = this.getRandomLatLng();\r\n            } while(this.alreadyVisited.includes(randomPos.position.toString()));\r\n\r\n            this.alreadyVisited.push(randomPos.position.toString());\r\n            \r\n            radius = randomPos.radius;\r\n            position = randomPos.position;\r\n            randomFeatureProperties = randomPos.properties;\r\n        }\r\n\r\n        return new Promise((resolve) => {\r\n            this.service.getPanorama(\r\n                {\r\n                    location: position,\r\n                    preference: 'nearest',\r\n                    radius,\r\n                    source: this.settingsPanorama.allPanorama\r\n                        ? 'default'\r\n                        : 'outdoor',\r\n                },\r\n                async (data, status) => {\r\n                    if (\r\n                        status !== google.maps.StreetViewStatus.OK ||\r\n                        !data ||\r\n                        !data.location ||\r\n                        !this._checkStreetView(data)\r\n                    ) {\r\n                        resolve(await this.getStreetView(round));\r\n                    } else {\r\n                        resolve(\r\n                            await this._getResponseStreetViewService(\r\n                                round,\r\n                                data,\r\n                                cptNotFoundLocation,\r\n                                randomFeatureProperties\r\n                            )\r\n                        );\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    async _getResponseStreetViewService(\r\n        round,\r\n        data,\r\n        cptNotFoundLocation,\r\n        randomFeatureProperties\r\n    ) {\r\n        let isInGeoJSONResult, isVisibleDialog = false;\r\n        if (this.placeGeoJson != null) {\r\n            isInGeoJSONResult = isInGeoJSON(\r\n                turfModel.point([\r\n                    data.location.latLng.lng(),\r\n                    data.location.latLng.lat(),\r\n                ]),\r\n                this.placeGeoJson\r\n            );\r\n        }\r\n        if (isInGeoJSONResult === false && cptNotFoundLocation < 3) {\r\n            return this.getStreetView(round, cptNotFoundLocation + 1);\r\n        } else {\r\n            // If 3 times Street View does not find location in the polygon placeGeoJson print warning message\r\n            if (isInGeoJSONResult === false) {\r\n                isVisibleDialog = true;\r\n            }\r\n            let areaCode;\r\n            try{\r\n                areaCode = await this._getAreaCode(data);\r\n            }catch(err){\r\n                return this.getStreetView(round);\r\n            }\r\n            \r\n            return {\r\n                panorama: data,\r\n                roundInfo: randomFeatureProperties || null,\r\n                area: areaCode,\r\n                warning: isVisibleDialog,\r\n            };\r\n        }\r\n    }\r\n    \r\n\r\n    getRandomLatLng() {\r\n        if (this.placeGeoJson != null) {\r\n            let position,\r\n                radius,\r\n                properties = null;\r\n            if (this.placeGeoJson.type === 'FeatureCollection') {  \r\n                let randInt = Math.floor(\r\n                    Math.random() * this.placeGeoJson.features.length\r\n                );\r\n\r\n                const feature = this.placeGeoJson.features[randInt];\r\n                properties = feature.properties;\r\n                if (feature.geometry.type === 'Point') {\r\n                    position = feature.geometry.coordinates;\r\n                    radius = 50;\r\n                } else {\r\n                    radius = getMaxDistanceBbox(bbox(feature)) * 100;\r\n                    position = randomPositionInPolygon(feature);\r\n                }\r\n            } else {\r\n                radius = getMaxDistanceBbox(bbox(this.placeGeoJson)) * 100;\r\n                position = randomPositionInPolygon(this.placeGeoJson);\r\n            }\r\n\r\n            return {\r\n                radius,\r\n                position: new google.maps.LatLng(position[1], position[0]),\r\n                properties,\r\n            };\r\n        }\r\n\r\n        // Generate a random latitude and longitude\r\n        const lat = Math.random() * 170 - 85;\r\n        const lng = Math.random() * 360 - 180;\r\n\r\n        return {\r\n            radius: 100000,\r\n            position: new google.maps.LatLng(lat, lng),\r\n            properties: null,\r\n        };\r\n    }\r\n\r\n    _checkStreetView(data) {\r\n        return !(\r\n            this.settingsPanorama.optimiseStreetView && \r\n                (\r\n                    !/^\\xA9 (?:\\d+ )?Google$/.test(data.copyright) ||\r\n                    !data.imageDate ||\r\n                    data.links.length < 2 ||\r\n                    (Array.isArray(data.g) && data.g.length !== 0)\r\n                )\r\n        );\r\n    }\r\n\r\n    async _getAreaCode(data){\r\n        if (\r\n            [GAME_MODE.COUNTRY, GAME_MODE.CUSTOM_AREA].includes(\r\n                this.settingsGame.mode\r\n            )\r\n        ) {\r\n            if (\r\n                this.settingsGame.mode === GAME_MODE.COUNTRY ||\r\n                (this.settingsGame.areaParams &&\r\n                    this.settingsGame.areaParams.data.type ===\r\n                        AREA_MODE.NOMINATIM)\r\n            ) {\r\n                return getAreaCodeNameFromLatLng(\r\n                    data.location.latLng,\r\n                    this.settingsGame.areaParams &&\r\n                        this.settingsGame.areaParams.data\r\n                );\r\n            } else {\r\n                const area = this.settingsGame.areasJson.features.find(\r\n                    (feature) =>\r\n                        booleanPointInPolygon(\r\n                            [\r\n                                data.location.latLng.lng(),\r\n                                data.location.latLng.lat(),\r\n                            ],\r\n                            feature\r\n                        )\r\n                );\r\n\r\n                if (!area) {\r\n                    throw new Error('Area not found');\r\n                } else {\r\n                    const key = this.settingsGame.areaParams\r\n                        ? this.settingsGame.areaParams.data.pathKey\r\n                        : 'iso_a2';\r\n                    return area.properties[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default StreetViewService;\r\n","export default {\r\n    data() {\r\n        return {\r\n            canExit: false,\r\n        };\r\n    },\r\n    methods: {\r\n        beforeUnload(event) {\r\n            event.returnValue = this.$t('StreetView.confirmExit');\r\n        },\r\n    },\r\n    created() {\r\n        window.addEventListener('beforeunload', this.beforeUnload);\r\n    },\r\n    beforeRouteLeave(_to, _from, next) {\r\n        if (!this.canExit) {\r\n            const answer = window.confirm(this.$t('StreetView.confirmExit'));\r\n            if (answer) {\r\n                next();\r\n            } else {\r\n                next(false);\r\n            }\r\n        } else {\r\n            next();\r\n        }\r\n    },\r\n    beforeDestroy() {\r\n        window.removeEventListener('beforeunload', this.beforeUnload);\r\n    },\r\n};\r\n","<template>\r\n    <div id=\"game-page\">\r\n        <div id=\"street-view-container\">\r\n            <HeaderGame\r\n                ref=\"header\"\r\n                :distance=\"scoreHeader\"\r\n                :points=\"pointsHeader\"\r\n                :round=\"round\"\r\n                :room-name=\"roomName\"\r\n                :nb-round=\"nbRound\"\r\n                :remaining-time=\"remainingTime\"\r\n                :mode=\"mode\"\r\n                :guess-string=\"guessString\"\r\n                :leaderboard-shown=\"leaderboardShown\"\r\n            />\r\n\r\n            <div id=\"game-interface\">\r\n                <v-overlay :value=\"!isReady && multiplayer\" opacity=\"1\" />\r\n                <div id=\"street-view\" ref=\"streetView\" />\r\n\r\n\r\n                <div id=\"game-interface__overlay\">\r\n                    <v-tooltip top>\r\n                        <template v-slot:activator=\"{ on, attrs }\">\r\n                            <v-btn class=\"resetBtn\" rounded dark fab\r\n                                   v-bind=\"attrs\"\r\n                                   v-on=\"on\"\r\n                                   @click=\"resetLocation\" >\r\n                                <v-icon>mdi-crosshairs-gps</v-icon>\r\n                            </v-btn>\r\n                        </template>\r\n                        <span>{{ $t('Maps.reset') }}</span>\r\n                    </v-tooltip>\r\n                    <Maps\r\n                        ref=\"mapContainer\"\r\n                        :random-lat-lng=\"randomLatLng\"\r\n                        :random-feature-properties=\"randomFeatureProperties\"\r\n                        :room-name=\"roomName\"\r\n                        :player-number=\"playerNumber\"\r\n                        :player-name=\"playerName\"\r\n                        :is-ready=\"isReady\"\r\n                        :round=\"round\"\r\n                        :score=\"score\"\r\n                        :points=\"points\"\r\n                        :difficulty=\"difficultyData\"\r\n                        :time-limitation=\"timeLimitation\"\r\n                        :bbox=\"bbox\"\r\n                        :mode=\"mode\"\r\n                        :area=\"area\"\r\n                        :time-attack=\"timeAttack\"\r\n                        :nb-round=\"nbRound\"\r\n                        :countdown=\"countdown\"\r\n                        :score-mode=\"scoreMode\"\r\n                        :areasGeoJsonUrl=\"areaParams && areaParams.data.urlArea\"\r\n                        :pathKey=\"\r\n                            areaParams ? areaParams.data.pathKey : 'iso_a2'\r\n                        \"\r\n                        :mapDetails=\"mapDetails\"\r\n                        :score-leaderboard=\"scoreLeaderboard\"\r\n                        :guessed-leaderboard=\"guessedLeaderboard\"\r\n                        :guess-string=\"guessString\"\r\n                        :leaderboard-shown=\"leaderboardShown\"\r\n                        @resetLocation=\"resetLocation\"\r\n                        @calculateDistance=\"updateScore\"\r\n                        @showResult=\"showResult\"\r\n                        @goToNextRound=\"goToNextRound\"\r\n                        @finishGame=\"finishGame\"\r\n                        @printMapFull=\"printMapFull = $event\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <v-overlay :value=\"overlay\" opacity=\"0.8\" z-index=\"1\" />\r\n        <DialogMessage\r\n            :dialog-message=\"dialogMessage\"\r\n            :dialog-title=\"dialogTitle\"\r\n            :dialog-text=\"dialogText\"\r\n        />\r\n        <div class=\"alert-container\">\r\n            <Leaderboard\r\n                :guess-string=\"guessString\"\r\n                :leaderboard-shown=\"leaderboardShown\"\r\n                v-if=\"!printMapFull\"\r\n            ></Leaderboard>\r\n            <v-alert\r\n                v-if=\"isVisibleDialog\"\r\n                type=\"warning\"\r\n                dismissible\r\n                class=\"warning-alert\"\r\n            >\r\n                <b>{{ $t('StreetView.nearby.title') }}</b> :\r\n                {{ $t('StreetView.nearby.message') }}\r\n            </v-alert>\r\n            <v-alert\r\n                id=\"warningCountdown\"\r\n                v-model=\"isVisibleCountdownAlert\"\r\n                type=\"info\"\r\n                dismissible\r\n                transition=\"slide-x-transition\"\r\n                prominent\r\n                icon=\"mdi-clock-fast\"\r\n            >\r\n                {{ $tc('StreetView.countdownAlert', remainingTime) }}\r\n                <v-progress-linear\r\n                    :active=\"isVisibleCountdownAlert\"\r\n                    color=\"white\"\r\n                    v-model=\"countdownPercentage\"\r\n                    absolute\r\n                    bottom\r\n                ></v-progress-linear>\r\n            </v-alert>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nimport HeaderGame from '@/components/HeaderGame';\r\nimport Maps from '@/components/Maps';\r\nimport DialogMessage from '@/components/DialogMessage';\r\n\r\n\r\nimport StreetViewService from '@/plugins/StreetViewService';\r\n\r\nimport {\r\n    getRandomArea,\r\n} from '../utils';\r\n\r\nimport { GAME_MODE, SCORE_MODE } from '../constants';\r\n\r\nimport {mapActions, mapGetters, mapState} from 'vuex';\r\n\r\nimport ConfirmExitMixin from '@/mixins/ConfirmExitMixin';\r\nimport Leaderboard from \"@/components/game/Leaderboard.vue\";\r\n\r\nexport default {\r\n    components: {\r\n        Leaderboard,\r\n        HeaderGame,\r\n        Maps,\r\n        DialogMessage,\r\n    },\r\n    mixins: [ConfirmExitMixin],\r\n    props: {\r\n        roomName: {\r\n            default: null,\r\n            type: String,\r\n        },\r\n        // https://developers.google.com/maps/documentation/javascript/reference/street-view-service#StreetViewSource\r\n        allPanorama: {\r\n            default: false,\r\n            type: Boolean,\r\n        },\r\n        optimiseStreetView: {\r\n            default: true,\r\n            type: Boolean,\r\n        },\r\n        playerNumber: {\r\n            default: null,\r\n            type: Number,\r\n        },\r\n        playerName: {\r\n            default: null,\r\n            type: String,\r\n        },\r\n        placeGeoJson: {\r\n            default: null,\r\n            type: Object,\r\n        },\r\n        multiplayer: {\r\n            default: false,\r\n            type: Boolean,\r\n        },\r\n        time: {\r\n            default: 0,\r\n            type: Number,\r\n        },\r\n        difficulty: {\r\n            default: 2000,\r\n            type: Number,\r\n        },\r\n        bboxObj: {\r\n            default: null,\r\n            type: Array,\r\n        },\r\n        roundsPredefined: {\r\n            default: null,\r\n            type: Array,\r\n        },\r\n        modeSelected: {\r\n            default: GAME_MODE.CLASSIC,\r\n            type: String,\r\n        },\r\n        panControl: {\r\n            default: true,\r\n            type: Boolean,\r\n        },\r\n        zoomControl: {\r\n            default: true,\r\n            type: Boolean,\r\n        },\r\n        moveControl: {\r\n            default: true,\r\n            type: Boolean,\r\n        },\r\n        timeAttackSelected: {\r\n            default: false,\r\n            type: Boolean,\r\n        },\r\n        countdown: {\r\n            default: 0,\r\n            type: Number,\r\n        },\r\n        scoreMode: {\r\n            default: SCORE_MODE.NORMAL,\r\n            type: String,\r\n        },\r\n        areaParams: {\r\n            type: Object,\r\n        },\r\n        mapDetails:{\r\n            type: Object,\r\n            required: false,\r\n            default: undefined\r\n        },\r\n        nbRoundSelected: {\r\n            type: Number,\r\n            required: false,\r\n            default: 5,\r\n        },\r\n        guessedLeaderboard: {\r\n            default: true,\r\n            type: Boolean,\r\n        },\r\n        scoreLeaderboard: {\r\n            default: true,\r\n            type: Boolean,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            area: null,\r\n            randomLatLng: null,\r\n            randomFeatureProperties: null,\r\n            score: 0,\r\n            scoreHeader: 0,\r\n            points: 0,\r\n            pointsHeader: 0,\r\n            round: 1,\r\n            timeLimitation: this.time,\r\n            mode: this.modeSelected,\r\n            timeAttack: this.timeAttackSelected,\r\n            nbRound: this.timeAttackSelected ? 10 : this.nbRoundSelected,\r\n            remainingTime: 0,\r\n            endTime: null,\r\n            hasTimerStarted: false,\r\n            hasLocationSelected: false,\r\n            overlay: false,\r\n            room: null,\r\n            isReady: false,\r\n            dialogMessage: this.multiplayer,\r\n            dialogTitle: this.$t('StreetView.waitForOtherPlayers'),\r\n            dialogText: '',\r\n            isVisibleDialog: false,\r\n            panorama: null,\r\n\r\n            difficultyData: this.difficulty,\r\n            bbox: this.bboxObj,\r\n            isVisibleCountdownAlert: false,\r\n            timeCountdown: 0,\r\n\r\n            streetViewService: null,\r\n            leaderboard: [],\r\n            leaderboardShown: this.guessedLeaderboard || this.scoreLeaderboard,\r\n            printMapFull: false\r\n        };\r\n    },\r\n    computed: {\r\n      ...mapGetters(['areasJson']),\r\n      ...mapState('settingsStore', [\r\n        'players',\r\n      ]),\r\n      guessString() {\r\n        if(!this.leaderboardShown) return \"\";\r\n        if(this.scoreLeaderboard) {\r\n          return Object.entries(this.leaderboard)\r\n            .sort(([, a], [, b]) => b.score - a.score)\r\n            .map(([, player]) => `${player.name}: ${player.guessed ? this.$t(\"Maps.leaderboard.guessed\") : this.$t(\"Maps.leaderboard.notGuessed\")} / ${player.scoreHeader || 0}`)\r\n            .join('\\n');\r\n        } else {\r\n          return Object.entries(this.leaderboard)\r\n            .sort(([, a], [, b]) => b.guessed - a.guessed)\r\n            .map(([, player]) => `${player.name}: ${player.guessed ? this.$t(\"Maps.leaderboard.guessed\") : this.$t(\"Maps.leaderboard.notGuessed\")}`)\r\n            .join('\\n');\r\n        }\r\n      },\r\n      countdownPercentage() {\r\n          return (this.remainingTime * 100) / this.timeCountdown;\r\n      }\r\n    },\r\n    async mounted() {\r\n        if (\r\n            (this.areaParams && this.areaParams.data.urlArea) ||\r\n            this.mode === GAME_MODE.COUNTRY\r\n        ) {\r\n            await this.loadAreas(\r\n                this.areaParams && this.areaParams.data.urlArea\r\n            );\r\n        }\r\n        await this.$gmapApiPromiseLazy();\r\n        this.panorama = new google.maps.StreetViewPanorama(\r\n            this.$refs.streetView\r\n        );\r\n\r\n        if (!this.streetViewService) {\r\n            this.streetViewService = new StreetViewService(\r\n                { allPanorama: this.allPanorama, optimiseStreetView: this.optimiseStreetView },\r\n                { mode: this.mode, areaParams: this.areaParams, areasJson: this.areasJson },\r\n                this.placeGeoJson,\r\n                this.roundsPredefined\r\n            );\r\n        }\r\n\r\n        if (!this.multiplayer) {\r\n            await this.loadStreetView();\r\n            this.$refs.mapContainer.startNextRound();\r\n\r\n            if (this.timeLimitation != 0) {\r\n                if (!this.hasTimerStarted) {\r\n                    this.initTimer(this.timeLimitation);\r\n                    this.hasTimerStarted = true;\r\n                }\r\n            }\r\n        } else {\r\n            // Set a room name if it's null to detect when the user refresh the page\r\n            if (!this.roomName) {\r\n                this.exitGame();\r\n            }\r\n\r\n            this.room = firebase.database().ref(this.roomName);\r\n\r\n            if (this.playerNumber === 1) {\r\n                await this.loadStreetView();\r\n            }\r\n\r\n            this.room.child('active').set(true);\r\n            this.room.on('value', (snapshot) => {\r\n                // Check if the room is already removed\r\n                if (snapshot.hasChild('active')) {\r\n                    // Leaderboard\r\n                    if(this.scoreLeaderboard) {\r\n                        this.leaderboard = Object.entries(snapshot.val().playerName).map((player) => {\r\n                            return {\r\n                                scoreHeader: this.leaderboard.find((entity) => entity.id === player[0])?.scoreHeader || 0,\r\n                                score: snapshot.val()?.finalPoints?.[player[0]] || 0,\r\n                                name: player[1],\r\n                                id: player[0],\r\n                                guessed: !!snapshot.val()?.guess?.[player[0]],\r\n                            };\r\n                        });\r\n                    } else if(this.guessedLeaderboard) {\r\n                      this.leaderboard = Object.entries(snapshot.val().playerName).map((player) => {\r\n                        return {\r\n                          name: player[1],\r\n                          guessed: !!snapshot.val()?.guess?.[player[0]],\r\n                          id: player[0],\r\n                        };\r\n                      });\r\n                    }\r\n\r\n\r\n                    // Put the player into the current round node if the player is not put yet\r\n                    if (\r\n                        !snapshot\r\n                            .child('round' + this.round)\r\n                            .hasChild('player' + this.playerNumber)\r\n                    ) {\r\n                        this.room\r\n                            .child('round' + this.round)\r\n                            .child('player' + this.playerNumber)\r\n                            .set(0);\r\n\r\n                        // Other players load the streetview the first player loaded earlier\r\n                        if (this.playerNumber != 1) {\r\n                            let randomLat = snapshot\r\n                                .child(\r\n                                    'streetView/round' +\r\n                                        this.round +\r\n                                        '/latitude'\r\n                                )\r\n                                .val();\r\n                            let randomLng = snapshot\r\n                                .child(\r\n                                    'streetView/round' +\r\n                                        this.round +\r\n                                        '/longitude'\r\n                                )\r\n                                .val();\r\n\r\n                            this.area = snapshot\r\n                                .child(\r\n                                    'streetView/round' + this.round + '/area'\r\n                                )\r\n                                .val();\r\n                            this.isVisibleDialog = snapshot\r\n                                .child(\r\n                                    'streetView/round' + this.round + '/warning'\r\n                                )\r\n                                .val();\r\n                            this.randomFeatureProperties = snapshot\r\n                                .child(\r\n                                    'streetView/round' +\r\n                                        this.round +\r\n                                        '/roundInfo'\r\n                                )\r\n                                .val();\r\n                            this.randomLatLng = new google.maps.LatLng(\r\n                                randomLat,\r\n                                randomLng\r\n                            );\r\n                            this.resetLocation();\r\n                        }\r\n                    }\r\n\r\n                    // Enable guess button when every players are put into the current round's node\r\n                    if (\r\n                        snapshot.child('round' + this.round).numChildren() ===\r\n                            snapshot.child('size').val() &&\r\n                        !this.isReady\r\n                    ) {\r\n                        // Close the dialog when everyone is ready\r\n                        this.dialogMessage = false;\r\n                        this.dialogText = '';\r\n\r\n                        this.isReady = true;\r\n                        this.$refs.mapContainer.startNextRound();\r\n\r\n                        // Countdown timer starts\r\n                        this.timeLimitation = snapshot\r\n                            .child('timeLimitation')\r\n                            .val();\r\n\r\n                        if (this.timeLimitation != 0) {\r\n                            if (!this.hasTimerStarted) {\r\n                                this.initTimer(this.timeLimitation);\r\n                                this.hasTimerStarted = true;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Delete the room when everyone finished the game\r\n                    if (\r\n                        snapshot.child('isGameDone').numChildren() ==\r\n                        snapshot.child('size').val()\r\n                    ) {\r\n                        this.room.child('active').remove();\r\n                        this.room.off();\r\n                        this.room.remove();\r\n                    }\r\n                } else {\r\n                    // Force the players to exit the game when 'Active' is removed\r\n                    this.exitGame();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$refs.header.startTimer();\r\n    },\r\n    beforeDestroy() {\r\n        if (document.querySelector('.widget-scene')) {\r\n            document\r\n                .querySelector('.widget-scene')\r\n                .removeEventListener('keydown', this.onUserEventPanoramaKey);\r\n\r\n            document\r\n                .querySelector('.widget-scene')\r\n                .removeEventListener(\r\n                    'mousedown',\r\n                    this.onUserEventPanoramaMouse\r\n                );\r\n        }\r\n        window.removeEventListener('beforeunload', this.beforeUnload);\r\n        if (this.room) {\r\n            // Remove the room when the player refreshes the window\r\n            // Remove the room when the player pressed the back button on browser\r\n            this.room.child('active').remove();\r\n            this.room.off();\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions(['loadAreas']),\r\n        async loadStreetView() {\r\n            let {panorama, roundInfo, warning, area} = await this.streetViewService.getStreetView(this.round);\r\n            this.randomLatLng = panorama.location.latLng;\r\n            this.randomFeatureProperties = roundInfo;\r\n            this.area = area;\r\n            this.setPosition(panorama);\r\n\r\n            if (this.multiplayer) {\r\n                // Put the streetview's location into firebase\r\n                this.room\r\n                    .child('streetView/round' + this.round)\r\n                    .set({\r\n                        latitude: this.randomLatLng.lat(),\r\n                        longitude: this.randomLatLng.lng(),\r\n                        roundInfo: roundInfo,\r\n                        ...(area && {area}),\r\n                        warning,\r\n                 });\r\n            }\r\n        },\r\n        resetLocation() {\r\n            const service = new google.maps.StreetViewService();\r\n            service.getPanorama(\r\n                {\r\n                    location: this.randomLatLng,\r\n                    preference: 'nearest',\r\n                    radius: 50,\r\n                    source: this.allPanorama ? 'default' : 'outdoor',\r\n                },\r\n                this.setPosition\r\n            );\r\n        },\r\n        setPosition(data) {\r\n            this.panorama.setOptions({\r\n                addressControl: false,\r\n                fullscreenControl: false,\r\n                motionTracking: false,\r\n                motionTrackingControl: false,\r\n                showRoadLabels: false,\r\n                panControl: this.panControl,\r\n                zoomControl: this.zoomControl,\r\n                scrollwheel: this.zoomControl,\r\n                disableDoubleClickZoom: !this.zoomControl,\r\n                linksControl: this.moveControl,\r\n                clickToGo: this.moveControl,\r\n            });\r\n            // Remove google streetview link\r\n            if (document.querySelector('#street-view a[href^=\"https://maps\"]'))\r\n                document\r\n                    .querySelector('#street-view a[href^=\"https://maps\"]')\r\n                    .remove();\r\n            setTimeout(() => {\r\n                if (document.querySelector('.widget-scene')) {\r\n                    document\r\n                        .querySelector('.widget-scene')\r\n                        .addEventListener(\r\n                            'keydown',\r\n                            this.onUserEventPanoramaKey\r\n                        );\r\n\r\n                    document\r\n                        .querySelector('.widget-scene')\r\n                        .addEventListener(\r\n                            'mousedown',\r\n                            this.onUserEventPanoramaMouse\r\n                        );\r\n                    document\r\n                        .querySelector('.widget-scene')\r\n                        .addEventListener(\r\n                            'touchstart',\r\n                            this.onUserEventPanoramaMouse\r\n                        );\r\n                    document\r\n                        .querySelector('.widget-scene')\r\n                        .addEventListener(\r\n                            'pointerdown',\r\n                            this.onUserEventPanoramaMouse\r\n                        );\r\n                }\r\n            }, 50);\r\n\r\n            if(data && data.location)\r\n                this.panorama.setPano(data.location.pano);\r\n            this.panorama.setPov({\r\n                heading: 270,\r\n                pitch: 0,\r\n            });\r\n\r\n            this.panorama.setZoom(0);\r\n        },\r\n        initTimer(time, printAlert) {\r\n            const endDate = new Date();\r\n            endDate.setSeconds(endDate.getSeconds() + time);\r\n            if (printAlert) {\r\n                this.timeCountdown = time;\r\n                this.isVisibleCountdownAlert = true;\r\n            }\r\n            if (this.hasTimerStarted) {\r\n                this.endTime = this.endTime > endDate ? endDate : this.endTime;\r\n            } else {\r\n                this.endTime = endDate;\r\n                this.startTimer();\r\n            }\r\n        },\r\n        startTimer(round = this.round) {\r\n            if (round === this.round) {\r\n                this.remainingTime = Math.max(\r\n                    0,\r\n                    Math.round((this.endTime - Date.now()) / 1000)\r\n                );\r\n                if (this.remainingTime > 0) {\r\n                    setTimeout(() => {\r\n                        this.startTimer(round);\r\n                    }, 1000);\r\n                } else {\r\n                    this.timerInProgress = false;\r\n                    if (!this.hasLocationSelected) {\r\n                        if (\r\n                            [GAME_MODE.COUNTRY, GAME_MODE.CUSTOM_AREA].includes(\r\n                                this.mode\r\n                            )\r\n                        ) {\r\n                            this.$refs.mapContainer.selectRandomLocation(\r\n                                getRandomArea(\r\n                                    this.areasJson,\r\n                                    this.areaParams\r\n                                        ? this.areaParams.data.pathKey\r\n                                        : 'iso_a2'\r\n                                )\r\n                            );\r\n                        } else {\r\n                            // Set a random location if the player didn't select a location in time\r\n                            this.$refs.mapContainer.selectRandomLocation(\r\n                                this.streetViewService.getRandomLatLng().position\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        updateScore(distance, points) {\r\n            // Update the score and save it into firebase\r\n            this.hasLocationSelected = true;\r\n            if (!this.multiplayer) {\r\n                this.remainingTime = 0;\r\n            }\r\n            this.score += distance;\r\n            this.points += points;\r\n\r\n            if (this.multiplayer) {\r\n                this.room\r\n                    .child('finalScore/player' + this.playerNumber)\r\n                    .set(this.score);\r\n                this.room\r\n                    .child('finalPoints/player' + this.playerNumber)\r\n                    .set(this.points);\r\n\r\n                // Wait for other players to guess locations\r\n                this.dialogTitle = this.$t('StreetView.waitForOtherPlayers');\r\n                this.dialogMessage = true;\r\n            }\r\n        },\r\n        showResult() {\r\n            this.scoreHeader = this.score; // Update the score on header after every players guess locations\r\n            this.pointsHeader = this.points;\r\n            this.remainingTime = 0;\r\n            this.dialogMessage = false;\r\n            this.isVisibleCountdownAlert = false;\r\n            this.overlay = true;\r\n            this.$refs.header.stopTimer();\r\n\r\n            // Leaderboard\r\n            for (let player of Object.entries(this.leaderboard)) {\r\n              player[1].scoreHeader = player[1].score;\r\n            }\r\n        },\r\n        async goToNextRound(playAgain = false) {\r\n            if (playAgain) {\r\n                this.round = 0;\r\n                this.scoreHeader = 0;\r\n                this.pointsHeader = 0;\r\n                this.score = 0;\r\n                this.points = 0;\r\n            }\r\n\r\n            // Reset\r\n            this.randomLatLng = null;\r\n            this.area = null;\r\n            this.overlay = false;\r\n            this.hasTimerStarted = false;\r\n            this.hasLocationSelected = false;\r\n            this.isVisibleDialog = false;\r\n            this.randomFeatureProperties = null;\r\n\r\n            if (this.multiplayer) {\r\n                this.dialogMessage = true; // Show the dialog while waiting for other players\r\n                this.isReady = false; // Turn off the flag so the click event can be added in the next round\r\n            }\r\n\r\n            // Update the round\r\n            this.round += 1;\r\n\r\n            if (this.playerNumber == 1 || !this.multiplayer) {\r\n                await this.loadStreetView();\r\n                if (!this.multiplayer && this.timeLimitation != 0) {\r\n                    this.initTimer(this.timeLimitation);\r\n                }\r\n            } else {\r\n                // Trigger listener and load the next streetview\r\n                this.room\r\n                    .child('trigger/player' + this.playerNumber)\r\n                    .set(this.round);\r\n            }\r\n            this.$refs.mapContainer.startNextRound();\r\n        },\r\n        exitGame() {\r\n            // Disable the listener and force the players to exit the game\r\n            this.dialogTitle = this.$t('StreetView.redirectToHomePage');\r\n            this.dialogText = this.$t('StreetView.exitGame');\r\n            this.dialogMessage = true;\r\n            this.canExit = true;\r\n            if (this.room) {\r\n                this.room.off();\r\n                this.room.remove();\r\n                this.$router.push('/history');\r\n            } else {\r\n                this.$router.push('/');\r\n            }\r\n        },\r\n        finishGame() {\r\n            this.canExit = true;\r\n            if (!this.multiplayer) {\r\n                this.$router.push('/history');\r\n            } else {\r\n                // Open the dialog while waiting for other players to finsih the game\r\n                this.dialogTitle = this.$t(\r\n                    'StreetView.waitForOtherPlayersToFinish'\r\n                );\r\n                this.dialogText = '';\r\n                this.dialogMessage = true;\r\n            }\r\n        },\r\n        onUserEventPanoramaKey(e) {\r\n            if (\r\n                (!this.moveControl &&\r\n                    [38, 40, 87, 83, 90].includes(e.keyCode)) ||\r\n                (!this.zoomControl &&\r\n                    [107, 109, 187, 189].includes(e.keyCode)) ||\r\n                (!this.panControl &&\r\n                    [37, 39, 65, 68, 100, 102].includes(e.keyCode))\r\n            ) {\r\n                e.stopPropagation();\r\n            }\r\n        },\r\n        onUserEventPanoramaMouse(e) {\r\n            if (!this.panControl) e.stopPropagation();\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n#game-page {\r\n    position: relative;\r\n    height: 100%;\r\n    height: var(--global-height, 100%);\r\n    width: 100%;\r\n    top: 0;\r\n    left: 0;\r\n}\r\n\r\n#street-view-container {\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n    top: 0;\r\n    left: 0;\r\n}\r\n#game-interface {\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    &__overlay {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        display: flex;\r\n        .resetBtn{\r\n            position: absolute;\r\n            bottom: 22px;\r\n            right: 70px;\r\n            z-index: 1;\r\n            @media (max-width: 450px) {\r\n                bottom: 65px;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n#street-view {\r\n    position: relative;\r\n    min-height: 100%;\r\n    width: 100%;\r\n}\r\n.alert-container {\r\n    margin-top: 65px;\r\n    .v-alert {\r\n        z-index: 2;\r\n    }\r\n    #warningCountdown {\r\n        width: fit-content;\r\n        margin: 10px;\r\n        margin-top: 90px;\r\n        padding: auto 30px;\r\n    }\r\n}\r\n\r\n@media (max-width: 450px) {\r\n    #game-interface {\r\n        display: grid;\r\n        grid-template-rows: auto 44px;\r\n        #game-interface--overlay {\r\n            position: initial;\r\n        }\r\n    }\r\n\r\n    #reset-button {\r\n        bottom: 120px;\r\n    }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./StreetView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./StreetView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StreetView.vue?vue&type=template&id=5365abc1&scoped=true&\"\nimport script from \"./StreetView.vue?vue&type=script&lang=js&\"\nexport * from \"./StreetView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StreetView.vue?vue&type=style&index=0&id=5365abc1&prod&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5365abc1\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAlert } from 'vuetify/lib/components/VAlert';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VOverlay } from 'vuetify/lib/components/VOverlay';\nimport { VProgressLinear } from 'vuetify/lib/components/VProgressLinear';\nimport { VTooltip } from 'vuetify/lib/components/VTooltip';\ninstallComponents(component, {VAlert,VBtn,VIcon,VOverlay,VProgressLinear,VTooltip})\n"],"names":["meta_1","bbox","geojson","result","Infinity","coordEach","coord","exports","invariant_1","booleanPointInPolygon","point","polygon","options","Error","pt","getCoord","geom","getGeom","type","polys","coordinates","inBBox","insidePoly","i","length","inRing","ignoreBoundary","inHole","k","ring","isInside","slice","j","xi","yi","xj","yj","onBoundary","intersect","feature","properties","feat","id","geometry","_options","lineString","multiPoint","multiLineString","multiPolygon","Array","isArray","isNumber","points","featureCollection","map","coords","_i","coordinates_1","polygons","lineStrings","features","fc","geometryCollection","geometries","round","num","precision","multiplier","Math","pow","radiansToLength","radians","units","factor","factors","lengthToRadians","distance","lengthToDegrees","radiansToDegrees","bearingToAzimuth","bearing","angle","degrees","PI","degreesToRadians","convertLength","originalUnit","finalUnit","convertArea","area","startFactor","areaFactors","finalFactor","isNaN","isObject","input","constructor","Object","validateBBox","forEach","validateId","indexOf","defineProperty","value","earthRadius","centimeters","centimetres","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","yards","unitsFactors","acres","hectares","helpers_1","getCoords","containsNumber","geojsonType","name","featureOf","collectionOf","_a","getType","_name","helpers","callback","excludeWrapCoord","l","stopG","geometryMaybeCollection","isGeometryCollection","wrapShrink","coordIndex","isFeatureCollection","isFeature","stop","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","coordReduce","initialValue","previousValue","currentCoord","undefined","propEach","propReduce","currentProperties","featureEach","featureReduce","currentFeature","coordAll","push","geomEach","g","featureProperties","featureBBox","featureId","geomReduce","currentGeometry","flattenEach","coordinate","flattenReduce","segmentEach","segmentIndex","previousCoords","previousFeatureIndex","previousMultiIndex","prevGeomIndex","featureIndexCoord","multiPartIndexCoord","currentSegment","segmentReduce","started","lineEach","lineReduce","currentLine","findSegment","findPoint","randomPosition","coordInBBox","lon","lat","randomPoint","count","randomPolygon","num_vertices","max_radial_length","_loop_1","vertices","circleOffsets","apply","random","cur","index","arr","radialScaler","sin","cos","vertexToCoordinate","randomLineString","max_length","max_rotation","startingPoint","priorAngle","tan","hub","rnd","$","$entries","target","stat","entries","O","call","proto","enumerable","toJSON","URL","prototype","toString","this","randomPositionInPolygon","position","bboxObj","module","render","_vm","_h","$createElement","_c","_self","attrs","ref","scoreHeader","pointsHeader","roomName","nbRound","remainingTime","mode","guessString","leaderboardShown","isReady","multiplayer","scopedSlots","_u","key","fn","on","_g","_b","staticClass","resetLocation","_v","_s","$t","randomLatLng","randomFeatureProperties","playerNumber","playerName","score","difficultyData","timeLimitation","timeAttack","countdown","scoreMode","areaParams","data","urlArea","pathKey","mapDetails","scoreLeaderboard","guessedLeaderboard","updateScore","showResult","goToNextRound","finishGame","$event","printMapFull","overlay","dialogMessage","dialogTitle","dialogText","_e","model","$$v","isVisibleCountdownAlert","expression","$tc","countdownPercentage","staticRenderFns","scoreboard","$vuetify","breakpoint","mobile","countdownText","timerText","streamerMode","Intl","NumberFormat","$i18n","locale","format","$viewport","width","$emit","props","component","VBtn","components","DialogMessage","startedAt","intervalFunction","watch","startTimer","computed","_objectSpread","mapState","state","homeStore","getCountdownText","isDistanceVisible","GAME_MODE","methods","_this","Date","setInterval","now","stopTimer","clearInterval","VAppBar","class","activeMap","pinActive","isMakeGuessButtonClicked","isNextButtonVisible","size","mouseover","mouseleave","showNotepad","isGuessButtonClicked","hideMap","setSeletedPos","areasGeoJsonUrl","directives","rawName","isSummaryButtonVisible","selectedPos","room","selectLocation","style","backgroundColor","isNextButtonEnabled","dialogSummary","showMap","summaryTexts","game","domProps","showDistance","_l","text","finalPoints","finalScore","newVal","updateRecord","history","localStorage","getItem","JSON","parse","rank","findIndex","setItem","stringify","title","description","link","validURL","url","VIcon","lng","fullscreenControl","mapTypeControl","streetViewControl","draggableCursor","clickableIcons","styles","theme","dark","themes","gmap","light","MapMixin","centerOnBbox","fitBounds","east","north","south","west","setZoom","setCenter","drawPolyline","removePolylines","mixins","marker","markers","polylines","strokeColors","STROKE_COLORS","mounted","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","$gmapApiPromiseLazy","$refs","mapRef","$mapPromise","then","putMarker","isRandomLocation","label","info","icon","window","location","origin","anchor","google","maps","Point","Marker","removeMarkers","setMap","setInfoWindow","endGame","arguments","dataToDisplay","unit","infoWindow","InfoWindow","content","open","selectedLatLng","lineSymbol","path","strokeOpacity","scale","polyline","Polyline","strokeColor","icons","offset","repeat","startNextRound","_this2","addListener","e","latLng","removeListener","event","clearListeners","bounds","LatLngBounds","getVisible","extend","getPosition","polygonSelect","areaName","areaRandom","areaNameSelect","beige","green","large","showFlag","infoWindowDatas","flag","FlagIcon","String","default","Boolean","areas","allowSelect","randomPos","mapGetters","$countryNameLocale","getFeatureById","getProperty","loadAreas","areasJson","c","p","Data","fillOpacity","strokeWeight","addGeoJson","setStyle","is","fillColor","mapActions","pos","_distance","_points","_endGame","getScore","difficulty","time","SCORE_MODE","getScoreNormal","exp","VAlert","Leaderboard","DialogSummary","DetailsMap","Map","MapAreas","isSelected","isNextStreetViewReady","isNotepadVisible","countdownStarted","date","rounds","startTime","firebase","snapshot","hasChild","child","val","onDisconnect","remove","update","numChildren","guess","players","childSnapshot","posGuess","LatLng","roundValues","exportVal","toUpperCase","sort","a","b","parseInt","$parent","initTimer","setTimeout","refNotepad","focus","calculateDistance","set","getSelectedPos","selectRandomLocation","timePassed","includes","floor","spherical","computeDistanceBetween","isPlayAgain","StreetViewService","settingsPanorama","settingsGame","placeGeoJson","roundsPredefined","_classCallCheck","service","alreadyVisited","_createClass","_getStreetView","_callee2","cptNotFoundLocation","radius","positions","_args2","_context2","getRandomLatLng","abrupt","Promise","resolve","getPanorama","preference","source","allPanorama","_ref","status","StreetViewStatus","OK","_checkStreetView","t0","getStreetView","t1","sent","t2","_getResponseStreetViewService","t3","_x2","_x3","_x","_getResponseStreetViewService2","_callee3","isInGeoJSONResult","isVisibleDialog","areaCode","_context3","isInGeoJSON","turfModel","_getAreaCode","panorama","roundInfo","warning","_x4","_x5","_x6","_x7","randInt","getMaxDistanceBbox","optimiseStreetView","test","copyright","imageDate","links","_getAreaCode2","_callee4","_context4","AREA_MODE","getAreaCodeNameFromLatLng","find","_x8","canExit","beforeUnload","returnValue","created","addEventListener","beforeRouteLeave","_to","_from","answer","confirm","beforeDestroy","removeEventListener","HeaderGame","Maps","ConfirmExitMixin","Number","modeSelected","panControl","zoomControl","moveControl","timeAttackSelected","required","nbRoundSelected","endTime","hasTimerStarted","hasLocationSelected","timeCountdown","streetViewService","leaderboard","_ref2","_ref3","_slicedToArray","_ref4","_ref5","_ref6","player","concat","guessed","join","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","StreetViewPanorama","streetView","loadStreetView","mapContainer","exitGame","_this2$leaderboard$fi","_snapshot$val","_snapshot$val$finalPo","_snapshot$val2","_snapshot$val2$guess","entity","_snapshot$val3","_snapshot$val3$guess","randomLat","randomLng","off","header","document","querySelector","onUserEventPanoramaKey","onUserEventPanoramaMouse","_this3","_yield$_this3$streetV","setPosition","latitude","longitude","_this4","setOptions","addressControl","motionTracking","motionTrackingControl","showRoadLabels","scrollwheel","disableDoubleClickZoom","linksControl","clickToGo","setPano","pano","setPov","heading","pitch","printAlert","endDate","setSeconds","getSeconds","_this5","max","timerInProgress","getRandomArea","_Object$entries","_arguments","_this6","playAgain","$router","keyCode","stopPropagation"],"sourceRoot":""}